@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.full.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.full.min.js"></script>
<script type="text/javascript">

    $(function () {
        var dtToday = new Date();

        var month = dtToday.getMonth() + 1;
        var day = dtToday.getDate();
        var year = dtToday.getFullYear();
        if (month < 10)
            month = '0' + month.toString();
        if (day < 10)
            day = '0' + day.toString();

        var minDate = year + '-' + month + '-' + day;

        $('#txtDate').attr('min', minDate);
        document.getElementById('txtDate').value = new Date().toISOString().slice(0, 10);
        $('#txtValidTill').attr('min', minDate);
        document.getElementById('txtValidTill').value = new Date().toISOString().slice(0, 10);
    });

    LayoutApp.controller('MyController', function ($scope, $http, Upload, $timeout) {

        $('#overlay').show();

        $scope.getToday = function () {
            return new Date().toISOString().split('T')[0]

        }


        $(document).ready(function ()
        {

            document.getElementById("ddlImportHaulage").disabled = true;
            document.getElementById("ddlExportHaulage").disabled = true;
            document.getElementById("ddlTranshipment").disabled = true;
            document.getElementById("ddlExportIHC").disabled = true;
            document.getElementById("ddlImportIHC").disabled = true;

            $scope.IsValidDGClass = true;

            $('.my-select').select2({ placeholder: "--Select--", allowClear: true, width: '100%' });

            //RR
            $scope.fillBookingPartyValues();
            $scope.fillPortsValues();
            $scope.fillCityValues();
            $scope.fillCustomerMasterValues();
            $scope.fillShipmentTypeValues();
            $scope.HaulageTypeValues();
            $scope.fillServiceTypesValues();
            $scope.fillSlotOperatorAll();
            $scope.fillSlotTermsValues();

            $scope.IHCBindValues = [
                { 'name': 'Yes', 'ID': 1 },
                { 'name': 'No ', 'ID': 2 }
            ];
            $scope.RouteTypeBindValues = [
                { 'name': 'DIRECT', 'ID': 1 },
                { 'name': 'TRANSHIPMENT', 'ID': 2 }
            ];

            $scope.BindDGClassValues = [

                { 'name': 'Group-1', 'ID': 1 },
                { 'name': 'Group-2 ', 'ID': 2 },
                { 'name': 'Group-3 ', 'ID': 3 }
            ];

            $scope.BindModeValues = [
                { 'name': 'Combined', 'ID': 1 },
                { 'name': 'Detention', 'ID': 2 },
                { 'name': 'Demmurage', 'ID': 3 }
            ];
            //End//

            //Container
            $scope.fillCntrTypeValues();
            $scope.fillCommodityValues();
            $scope.DynamicGridContainer = [{ RCID: "", CntrTypes: "", CommodityTypes: "", DGClass: "", VGM: ""}];
            $scope.DynamicGridMode = [{ Mode: "", ExpFreeDays: "", ImpFreeDays: "" }];

            //Freight
            $scope.fillChargecodeValues();
            $scope.fillCurrencyValues();
            $scope.fillCollectionValues();
            $scope.DynamicGridFreight = [{ PortTariffID: "", RCID: "", CntrTypes: "", ChargeCodeID: "", CurrencyID: "", PaymentModeID: "", ReqRate: "", ManifRate: "", CustomerRate: "", RateDiff: "", CID: "" }];

            $scope.DynamicGridTermainal = [{ PortTariffID: "", RCID: "", CntrTypes: "", ChargeCodeID: "", CurrencyID: "", PaymentModeID: "", ReqRate: "", ManifRate: "", CustomerRate: "", RateDiff: "", CID: "" }];

            $scope.DynamicGridHaulage = [{ PortTariffID: "", RCID: "", CntrTypes: "", ChargeCodeID: "", CurrencyID: "", PaymentModeID: "", ReqRate: "", ManifRate: "", CustomerRate: "", RateDiff: "", CID: "" }];

            $scope.DynamicGridLocalImport = [{ PortTariffID: "", RCID: "", CntrTypes: "", ChargeCodeID: "", CurrencyID: "", PaymentModeID: "", ReqRate: "", ManifRate: "", CustomerRate: "", RateDiff: "", CID: "" }];

            $scope.DynamicGridLocalExport = [{ PortTariffID: "", RCID: "", CntrTypes: "", ChargeCodeID: "", CurrencyID: "", PaymentModeID: "", ReqRate: "", ManifRate: "", CustomerRate: "", RateDiff: "", CID: "" }];


            $scope.DynamicGridSlotAmount = [{ SlotOperatorID: "", SlotOperator: "", SlotTerms: "", SlotTermID: "", SlotAmt20: "", SlotAmt40: "", SID: "" }];
            $scope.DynamicGridSlotAmount.splice(0, 1);

            $scope.DynamicGridTsPort = [{ PortID: "" }];
            var queryString = new Array();
            if (window.location.search.split('?').length > 1) {
                var secret_key = CryptoJS.enc.Utf8.parse(localStorage.getItem("SessionKey"));
                var iv = CryptoJS.enc.Utf8.parse(localStorage.getItem("Sessioniv"));
                var bytes = CryptoJS.AES.decrypt(window.location.search.split('?')[1].toString(), secret_key, {
                    iv: iv,
                    mode: CryptoJS.mode.CBC,
                    padding: CryptoJS.pad.Pkcs7
                });

                var params = bytes.toString(CryptoJS.enc.Utf8).split('&');
                //alert(params);
                for (var i = 0; i < params.length; i++) {
                    var key = params[i].split('=')[0];
                    var value = decodeURIComponent(params[i].split('=')[1]);
                    queryString[key] = value;

                }
            }
            if (queryString["RQRegNo"] != null) {
                //document.getElementById("btnForceExpire").disabled = false;
                //document.getElementById("btnValidity").disabled = false;
                //document.getElementById("btnForceExpire").style.cursor = 'pointer';
                //document.getElementById("btnValidity").style.cursor = 'pointer';


                $scope.RegId = queryString["RQRegNo"].toString();
                $scope.FilRateSheetExsitingMaster(queryString["RQRegNo"].toString());
                $scope.FilRateSheetContinerExsitingMaster();
                $scope.FilRateSheetModeExsitingMaster();
                $scope.FilRateSheetTsPortExsitingMaster();
                $scope.FillExistingFreightTraiffCharges();
                $scope.FillExistingTerminalTraiffCharges();
                $scope.FillExistingHaulageTraiffCharges();
                $scope.FillExistingImportTraiffCharges();
                $scope.FillExistingExportTraiffCharges();
                $scope.FilRateSheetExsitingFreightImpRate();
                $scope.FilRateSheetExsitingFreightExpRate();
                $scope.FilRateSheetExsitingSlotAmount();
                $scope.CheckStatusDetails();

            }
            else {

               //document.getElementById("btnForceExpire").style.display = "none";
               // document.getElementById("btnValidity").style.display = "none";
               // document.getElementById("btnPrint").style.display = "none";
               // document.getElementById("btnHistory").style.display = "none";
               // document.getElementById("hidestatus").style.display = "none";
               // document.getElementById("txtAppRemarks").style.display = "none";
               // document.getElementById("txtReqRemarks").style.display = "none";
               // document.getElementById("txtRejRemarks").style.display = "none";
               // document.getElementById("viewattachment").style.display = "none";
            }


        });

        //Slot

        $scope.SlotTermsValue = null;
        $scope.fillSlotTermsValues = function () {
            var Datavalue = {};
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/SlotTremsValues/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.SlotTermsValue = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        //RR
        $scope.PortAllvalues = null;
        $scope.fillPortsValues = function () {
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/PortValues/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.PortAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        $scope.CityAllvalues = null;
        $scope.fillCityValues = function () {
            $http({
                method: 'POST',
                url: '/api/Home/cityBind/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.CityAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        $scope.CustomerMasterAllvalues = null;
        $scope.fillCustomerMasterValues = function () {

            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/CustomerMaster/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.CustomerMasterAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        $scope.UserNameMasterAllvalues = null;

        $scope.fillUserMasterValues = function (length) {
            var Datavalue = {};
            Datavalue.ID = length;
            $http({
                method: 'POST',
                url: '/api/SalesApi/ListUsers/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {

                        $scope.UserNameMasterAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        $scope.ShipmentTypeAllvalues = null;
        $scope.fillShipmentTypeValues = function () {
            var Datavalue = {};
            Datavalue.ID = "1"; //GeneralMaster Table seqNo
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/ModuleValues/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {
                    $scope.ShipmentTypeAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };

        $scope.HaulageTypeAllvalues = null;
        $scope.HaulageTypeValues = function () {
            var Datavalue = {};
            Datavalue.ID = "3"; //GeneralMaster Table seqNo
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/ModuleValues/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {
                    $scope.HaulageTypeAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        $scope.ServiceTypesValue = null;
        $scope.fillServiceTypesValues = function () {
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/ServiceTypesValues/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.ServiceTypesValue = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };

        $scope.SlotOperatorAllvalues = null;
        $scope.fillSlotOperatorAll = function () {

            var Datavalue = {};
            Datavalue.BussTypes = "7,8,19";
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/CustomerBussTypesMaster/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {
                    $scope.SlotOperatorAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        }

        $scope.BookingPartyAllvalues = null;
        $scope.fillBookingPartyValues = function () {

            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/CustomerMaster/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.BookingPartyAllvalues = result.data;
                    $('#overlay').hide();
                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };

        //Container

        $scope.CntrTypesvalues = null;
        $scope.fillCntrTypeValues = function () {
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/CntrTypeValues/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.CntrTypesvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        $scope.CommodityValue = null;
        $scope.fillCommodityValues = function () {

            var Datavalue = {};
            Datavalue.ID = "2"; //GeneralMaster Table seqNo
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/ModuleValues/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {
                    $scope.CommodityValue = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };


        $scope.ContainerAdd = function (DynamicGridContainer) {

            if (DynamicGridContainer.ImFreedays == "")
            {
                swal("Please enter Amount");
                return;
            }

            $scope.DynamicGridContainer.push({
                'RCID': "",
                'CntrTypes': "",
                'CommodityTypes': "",
                'DGClass': "",
                'VGM': ""
            });

        }
        $scope.ContainerRemove = function (gRow, index) {

            $scope.DynamicGridContainer.splice(index, 1);
            if (gRow != "") {
                var BussData = {};
                BussData.ID = gRow;
                $http({
                    method: 'POST',
                    url: '/api/SalesApi/RRCntrTypesDelete/',
                    data: JSON.stringify(BussData),
                }).then(function (result) {
                    $timeout(function () {

                    });
                });
            }

        }


        //end Container



        //Mode AdditionPort

        $scope.AdditionTSPortAdd = function (DynamicGridTsPort) {

            if (DynamicGridTsPort.PortID == "") {
                swal("Please select T/S Port");
                return;
            }

            $scope.DynamicGridTsPort.push({
                'PortID': ""

            });

        }

        $scope.AdditionTSPortAddRemove = function (DynamicGridTsPort, index) {
            $scope.DynamicGridTsPort.splice(index, 1);

        }


        //freigh
        $scope.ChargeCodeAllvalues = null;
        $scope.fillChargecodeValues = function () {
            $scope.states = [];
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/ChargeCode/',
                data: {}
            }).then(function (result) {
                $timeout(function ()
                {
                    $scope.ChargeCodeAllvalues = result.data;
                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };

        $scope.CurrencyValue = null;
        $scope.fillCurrencyValues = function () {
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/CurrencyValues/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.CurrencyValue = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };

        $scope.CollectionAllvalues = null;
        $scope.fillCollectionValues = function () {
            var Datavalue = {};
            Datavalue.ID = "9"; //GeneralMaster Table seqNo
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/ModuleValues/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {
                    $scope.CollectionAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };

        $scope.OnClickFetchTariffRate = function (CntrData, GridMode) {

            $scope.DynamicGridFreight.length = 0;
            $scope.DynamicGridTermainal.length = 0;
            $scope.DynamicGridHaulage.length = 0;
            var CntrTypesData = [];
            var ModeItemsvx = [];
            var validation = "";

            var ddlPortofLoading = $('#ddlPortofLoading').val();
            if (ddlPortofLoading == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port Of Loading</span></br>"
            }
            var ddlPortofDischarge = $('#ddlPortofDischarge').val();
            if (ddlPortofDischarge == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port of Discharge</span></br>"
            }


            var ddlPortOfOrg = $('#ddlPortOfOrg').val();
            var ddlPortofFinalPOD = $('#ddlPortofFinalPOD').val();



            if (ddlPortOfOrg != "?") {

                var ddlExportHaulage = $('#ddlExportHaulage').val();
                if (ddlExportHaulage  == "?") {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Export Haulage</span></br>"
                }

                var ddlExportIHC = $('#ddlExportIHC').val();
                if (ddlExportIHC == "?") {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Export IHC</span></br>"
                }

            }


            if (ddlPortofFinalPOD != "?") {

                var ddlImportHaulage = $('#ddlImportHaulage').val();
                if (ddlImportHaulage == "?") {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Import Haulage</span></br>"
                }

                var ddlImportIHC = $('#ddlImportIHC').val();
                if (ddlImportIHC == "?") {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Import IHC</span></br>"
                }

            }

            angular.forEach(CntrData, function (value, key) {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
            });
            if (CntrTypesData.toString() == "") {
                validation += "<span style='color:red;'>*</span> <span>Select Container Types </span></br>"
            }


            angular.forEach(GridMode, function (value, key) {
                ModeItemsvx.push(GridMode[key].Mode.ID);
            });

            if (ModeItemsvx.toString() == "") {
                validation += "<span style='color:red;'>*</span> <span>Select Freedays Mode</span></br>"
            }


            if (validation != "") {
                ShowPopup(validation);
                return false;
            }
            $('#overlay').fadeIn().delay(100).fadeOut();

            $scope.FillFreightTraiffCharges($scope.DynamicGridContainer);
            $scope.FillTerminalTraiffCharges($scope.DynamicGridContainer);
            if (ddlPortOfOrg != "?" || ddlPortofFinalPOD != "?") {
                $scope.FillHaulageTraiffCharges($scope.DynamicGridContainer);
            }

            $scope.LocalChargesImport($scope.DynamicGridContainer);
            $scope.LocalChargesExport($scope.DynamicGridContainer);
            $scope.LocalChargeOrigin($scope.DynamicGridContainer);
            $scope.LocalChargeDestination($scope.DynamicGridContainer);
        }

        $scope.FillFreightTraiffCharges = function (CntrData) {
            var CntrTypesData = [];
            var Commodity = [];

            var Datavalue = {};
            Datavalue.POL = $("#ddlPortofLoading").val();
            Datavalue.POD = $("#ddlPortofDischarge").val();
            Datavalue.TraiffRegular = 135;
            Datavalue.ChargeTypeID = 1;


            angular.forEach(CntrData, function (value, key)
            {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
                Commodity.push(CntrData[key].CommodityTypes.ID);


            });
            Datavalue.CntrTypes = CntrTypesData.toString();
            Datavalue.CommodityTypeID = Commodity.toString();


            $http({
                method: 'POST',
                url: '/api/SalesApi/RRFreighTariff',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridFreight.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridFreight.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.FillTerminalTraiffCharges = function (CntrData) {
            var Commodity = [];
            var CntrTypesData = [];
            var GroupID = [];
            var Datavalue = {};
            Datavalue.POL = $("#ddlPortofLoading").val();
            Datavalue.POD = $("#ddlPortofDischarge").val();
            Datavalue.ShipmentID = $("#ddlPortofDischarge").val();
            Datavalue.TraiffRegular = 136;
            Datavalue.ChargeTypeID = 1;

            angular.forEach(CntrData, function (value, key) {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
                Commodity.push(CntrData[key].CommodityTypes.ID);
                GroupID.push(CntrData[key].DGClass.ID);
            });
            Datavalue.CntrTypes = CntrTypesData.toString();
            Datavalue.CommodityTypeID = Commodity.toString();
            Datavalue.GroupID = GroupID.toString();



            $http({
                method: 'POST',
                url: '/api/SalesApi/RRFreighTariff',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridTermainal.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridTermainal.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.FillHaulageTraiffCharges = function (CntrData) {


            var Commodity = [];
            var CntrTypesData = [];
            var WightVT = [];
            var Datavalue = {};


            Datavalue.POL = $("#ddlPortofLoading").val();
            Datavalue.POD = $("#ddlPortofDischarge").val();

            Datavalue.POO = $("#ddlPortOfOrg").val();
            Datavalue.FPOD = $("#ddlPortofFinalPOD").val();

            Datavalue.TraiffRegular = 137;
            Datavalue.ExportIHC = $('#ddlExportIHC').val();
            Datavalue.ImportIHC = $('#ddlImportIHC').val();
            Datavalue.ChargeTypeID = 102;

            console.log(CntrData);
            angular.forEach(CntrData, function (value, key) {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
                Commodity.push(CntrData[key].CommodityTypes.ID);
                WightVT.push(CntrData[key].VGM)
            });
            Datavalue.CntrTypes = CntrTypesData.toString();
            Datavalue.CommodityTypeID = Commodity.toString();
            Datavalue.SlabValue = WightVT.toString();

            $http({
                method: 'POST',
                url: '/api/SalesApi/RRFreighTariff',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridHaulage.splice(0, 1);
                        }
                       
                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridHaulage.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }
        //LocalCharges //
        $scope.LocalChargesImport = function (CntrData) {

            var CntrTypesData = [];
            var Commodity = [];
            $scope.DynamicGridLocalImport.length = 0;
            var validation = "";

            var ddlPortofLoading = $('#ddlPortofLoading').val();
            if (ddlPortofLoading == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port Of Loading</span></br>"
            }

            if (validation != "") {
                ShowPopup(validation);
                return false;
            }

            $('#overlay').fadeIn().delay(100).fadeOut();

            var Datavalue = {};
            Datavalue.PortID = $("#ddlPortofLoading").val();
            Datavalue.TraiffRegular = 138;
            Datavalue.CollectionModeID = 18;
            Datavalue.ChargeTypeID = 1;

            angular.forEach(CntrData, function (value, key) {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
                Commodity.push(CntrData[key].CommodityTypes.ID);
            });
            //Datavalue.CntrTypes = CntrTypesData.toString() + "," + 17;
            Datavalue.CntrTypes = CntrTypesData.toString();
            Datavalue.CommodityTypeID = Commodity.toString();


            $http({
                method: 'POST',
                url: '/api/SalesApi/RRFreighTariff',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0)
                    {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridLocalImport.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridLocalImport.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.LocalChargesExport = function (CntrData)
        {
            var CntrTypesData = [];
            $scope.DynamicGridLocalExport.length = 0;
            var validation = "";

            var Commodity = [];
            var ddlPortofFinalPOD = $('#ddlPortofDischarge').val();
            if (ddlPortofFinalPOD == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Final POD</span></br>"
            }
            if (validation != "") {
                ShowPopup(validation);
                return false;
            }

            $('#overlay').fadeIn().delay(100).fadeOut();

            var Datavalue = {};
            Datavalue.PortID = $("#ddlPortofDischarge").val();
            Datavalue.TraiffRegular = 138;
            Datavalue.CollectionModeID = 19;
            Datavalue.ChargeTypeID = 1;
            angular.forEach(CntrData, function (value, key) {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
                Commodity.push(CntrData[key].CommodityTypes.ID);
            });
            Datavalue.CntrTypes = CntrTypesData.toString();
            //Datavalue.CntrTypes = CntrTypesData.toString() + "," + 17;
            Datavalue.CommodityTypeID = Commodity.toString();


            $http({
                method: 'POST',
                url: '/api/SalesApi/RRFreighTariff',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridLocalExport.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridLocalExport.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.LocalChargeOrigin = function (CntrData) {

            var validation = "";
            var Commodity = [];
            var CntrTypesData = [];
            var ddlPortofLoading = $('#ddlPortofLoading').val();
            if (ddlPortofLoading == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port Of Loading</span></br>"
            }

            if (validation != "") {
                ShowPopup(validation);
                return false;
            }
            var Datavalue = {};
            Datavalue.PortID = $("#ddlPortofLoading").val();
            Datavalue.TraiffRegular = 138;
            Datavalue.CollectionModeID = 18;
            angular.forEach(CntrData, function (value, key) {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
                Commodity.push(CntrData[key].CommodityTypes.ID);
            });
            Datavalue.CntrTypes = CntrTypesData.toString() + "," + 17;
            //Datavalue.CntrTypes = CntrTypesData.toString();
            Datavalue.CommodityTypeID = Commodity.toString();

            $http({
                method: 'POST',
                url: '/api/SalesApi/RRFreighTariffLocalAmt',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function ()
                {
                    if (result.data.length > 0)
                    {

                        $scope.LocalChargeImpAmt = result.data[0].Amount;
                        $scope.LocalChargeImpCurrency = result.data[0].Currency;
                    }

                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });


        }

        $scope.LocalChargeDestination = function (CntrData) {
            var Commodity = [];
            var CntrTypesData = [];
            var validation = "";
            var ddlPortofFinalPOD = $('#ddlPortofDischarge').val();
            if (ddlPortofFinalPOD == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select POD</span></br>"
            }
            if (validation != "") {
                ShowPopup(validation);
                return false;
            }
            var Datavalue = {};
            Datavalue.PortID = $('#ddlPortofDischarge').val();
            Datavalue.TraiffRegular = 138;
            angular.forEach(CntrData, function (value, key) {
                CntrTypesData.push(CntrData[key].CntrTypes.ID);
                Commodity.push(CntrData[key].CommodityTypes.ID);
            });
            Datavalue.CntrTypes = CntrTypesData.toString() + "," + 17;
            //Datavalue.CntrTypes = CntrTypesData.toString();
            Datavalue.CommodityTypeID = Commodity.toString();
            Datavalue.CollectionModeID = 19;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRFreighTariffLocalAmt',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {
                    if (result.data.length > 0) {
                        $scope.LocalChargeExpAmt = result.data[0].Amount;
                        $scope.LocalChargeExpCurrency = result.data[0].Currency;
                    }

                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });


        }
        //end //

        $scope.RecordSave = function (CntrData, FrightData, TerminalData, HaulData, ImpDate, ExpDate, TSPortData, GridMode, SlotGridDate) {

            var validation = "";
            var txtDate = $('#txtDate').val();
            if (txtDate.length == 0) {

            }
            if ($('#txtDate').val() == $('#txtValidTill').val() ) {
                validation += "<span style='color:red;'>*</span> <span>Valid Till not be same as RR Date</span></br>"
            }
            var ddlbookingParty = $('#ddlbookingParty').val();
            if (ddlbookingParty == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Booking Party</span></br>"
            }

            var ddlSalesPerson = $('#ddlSalesPerson').val();
            if (ddlSalesPerson == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please select Sales Person</span></br>"
            }

            var ddlShipmentType = $('#ddlShipmentType').val();
            if (ddlShipmentType == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select ShipmentTypes</span></br>"
            }

            //var ddlPortOfOrg = $('#ddlPortOfOrg').val();
            //if (ddlPortOfOrg == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Port of Orgin</span></br>"
            //}

            var ddlPortofLoading = $('#ddlPortofLoading').val();
            if (ddlPortofLoading == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port of Loading</span></br>"
            }

            //var ddlExportHaulage = $('#ddlExportHaulage').val();
            //if (ddlExportHaulage == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Export Haulage</span></br>"
            //}

            var ddlPortofDischarge = $('#ddlPortofDischarge').val();
            if (ddlPortofDischarge == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port of Discharge</span></br>"
            }

            //var ddlPortofFinalPOD = $('#ddlPortofFinalPOD').val();
            //if (ddlPortofFinalPOD == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Port of Final POD</span></br>"
            //}

            var ddlServiceType = $('#ddlServiceType').val();
            if (ddlServiceType == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Service Types</span></br>"
            }

            var txtValidTill = $('#txtValidTill').val();
            if (txtValidTill.length == 0) {
                validation += "<span style='color:red;'>*</span> <span>Please Enter ValidTill Date</span></br>"
            }
            var ddlRoteType = $('#ddlRoteType').val();
            if (ddlRoteType == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Rote Type</span></br>"
            }

            var ddlshipper = $('#ddlshipper').val();
            if (ddlshipper == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Shipper Name</span></br>"
            }

            //var ddlExportIHC = $('#ddlExportIHC').val();
            //if (ddlExportIHC == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Export IHC</span></br>"
            //}
            //var ddlImportIHC = $('#ddlImportIHC').val();
            //if (ddlImportIHC == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Import IHC</span></br>"
            //}

                var VGMValue = "";
                var Datav = "undefined";
            angular.forEach(CntrData, function (value, key) {
                Datav += CntrData[key].CntrTypes.ID;
                VGMValue += CntrData[key].VGM;

            });

                if (Datav.toString() == "undefined") {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Container Details</span></br>"
                }

                if (VGMValue.toString() == "") {
                    validation += "<span style='color:red;'>*</span> <span>Please Enter Container VGMNo</span></br>"
                }


            if (ddlServiceType != "5") {
                var DataFreightv = "undefined";
                angular.forEach(FrightData, function (value, key)
                {
                    if (typeof FrightData[key].CntrTypes.ID != "undefined")
                        DataFreightv += FrightData[key].CntrTypes.ID;

                });

                if (DataFreightv.toString() == "undefined") {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Freight Details</span></br>"
                }

                //angular.forEach(FrightData, function (value, key) {
                //    if (FrightData[key].ChargeCodeID.ID == "1") {
                //        if (FrightData[key].ManifRate == "0" || FrightData[key].ManifRate == "0.00") {
                //            validation += "<span style='color:red;'>*</span> <span>Ocean Freight is NIL, Kindly update Manifest Rate</span></br>"
                //        }
                //        if (FrightData[key].CustomerRate == "0" || FrightData[key].CustomerRate == "0.00") {
                //            validation += "<span style='color:red;'>*</span> <span>Ocean Freight is NIL, Kindly update Customer Rate</span></br>"
                //        }
                //    }

                //});

                var DataTerminalv = "undefined";
                angular.forEach(TerminalData, function (value, key) {
                    DataTerminalv += TerminalData[key].CntrTypes.ID;
                });

                if (DataTerminalv.toString() == "undefined") {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Termilan Details</span></br>"
                }
            }
            var DataHaulagev = "undefined";
            angular.forEach(HaulData, function (value, key) {
                DataHaulagev += TerminalData[key].CntrTypes.ID;
            });

            var DataSlotGird = "";
            angular.forEach(SlotGridDate, function (value, key)
            {
                if (typeof SlotGridDate[key].SlotOperatorID != 'undefined')
                {
                    DataSlotGird = SlotGridDate[key].SlotOperatorID
                }

            });
            if (typeof $scope.SlotFiledbyPrinclpal == "undefined" || $scope.SlotFiledbyPrinclpal== "0")
            {
                if (DataSlotGird == "")
                {
                    validation += "<span style='color:red;'>*</span> <span>Please Select Slot Amount</span></br>"
                }
            }


            if (validation != "") {
                ShowPopup(validation);
                return false;
            }
            $('#overlay').show();
            var BussData = {}
            var CntrItems = []
            var FreightItems = []
            var TerminalItems = []
            var HaulagItems = []
            var ImportItems = []
            var ExportItems = []
            var TranshimentPort = [];
            var ModeItems = [];
            var SlotItem = [];

            if ($scope.RegId == "")
                BussData.ID = 0;
            else
                BussData.ID = $scope.RegId;


            BussData.RatesheetNo = $scope.txtRRNumber;
            BussData.Date = $("#txtDate").val();
            BussData.ValidTill = $("#txtValidTill").val();

            BussData.BookingPartyID = $("#ddlbookingParty").val();
            BussData.SalesPersonID = $("#ddlSalesPerson").val();
            BussData.ShipmentID = $("#ddlShipmentType").val();


            if ($("#ddlPortOfOrg").val() != null)
                BussData.PortOfOrgin = $("#ddlPortOfOrg").val();
            else
                BussData.PortOfOrgin = 0;


            BussData.PortOfLoading = $("#ddlPortofLoading").val();
            BussData.ExpHaulageID = $("#ddlExportHaulage").val();

            BussData.PlaceofDischargeId = $("#ddlPortofDischarge").val();


            if ($("#ddlPortofFinalPOD").val() != null)
                BussData.FinalPODId = $("#ddlPortofFinalPOD").val();
            else
                BussData.FinalPODId = 0;

            BussData.ImpHaulageId = $("#ddlImportHaulage").val();
            BussData.RouteType = $('#ddlRoteType').val();

            if ($("#ddlTranshipment").val() != null)
                BussData.TranshimentPortID = $("#ddlTranshipment").val();
            else
                BussData.TranshimentPortID = 0;


            BussData.ShipperID = $('#ddlshipper').val();




            if ($("#ddlExportIHC").val() != "?")
                BussData.ExportIHC = $("#ddlExportIHC").val();
            else
                BussData.ExportIHC = 0;



            if ($("#ddlImportIHC").val() != "?")
                BussData.ImportIHC = $("#ddlImportIHC").val();
            else
                BussData.ImportIHC = 0;

            BussData.ServiceTypeID = $("#ddlServiceType").val();


            if ($scope.IsRebat != "")
                BussData.IsRebate = $scope.IsRebat;
            else
                BussData.IsRebate = 0;


            if ($("#txtRebateAmount").val() != "")
                BussData.RebateAmt = $scope.txtRebateAmount;
            else
                BussData.RebateAmt = 0;

            if ($('#ChekboxSingal').prop('checked'))
                BussData.SingleUser = 1;
            else
                BussData.SingleUser = 0;

            BussData.UserID = localStorage.getItem("UserID");
            BussData.AgentId = localStorage.getItem("AgencyID");
            BussData.SessionFinYear = new Date().getFullYear();
            BussData.AgentCode = localStorage.getItem("DocumentSuffix");
            BussData.Remarks = $scope.txtRemark;
            BussData.OtherRemarks = $scope.txtOtherRemark;
            BussData.DocumentAttached = $scope.txtFileName;

            if (typeof $scope.SlotFiledbyPrinclpal != "undefined" || $scope.SlotFiledbyPrinclpal != "0")
                BussData.SlotPrincipal = $scope.SlotFiledbyPrinclpal;
            else
                BussData.SlotPrincipal = 0;

            angular.forEach(CntrData, function (value, key) {

                var IDR = 0;
                var Cargov = "";
                if (typeof CntrData[key].CntrTypes.ID != "undefined") {
                    if (CntrData[key].RCID == "") {
                        IDR = 0;
                    }
                    else {

                        IDR = CntrData[key].RCID;

                    }
                 

                    if (typeof CntrData[key].Cargo == "undefined")
                    {

                        Cargov = "NULL";
                    }
                    else {
                        Cargov = CntrData[key].Cargo;
                    }

                    CntrItems.push('Insert:' + IDR, CntrData[key].CntrTypes.ID, CntrData[key].CommodityTypes.ID, CntrData[key].DGClass.ID, CntrData[key].VGM, Cargov);
                }
            });
            BussData.CntrItems = CntrItems.toString();


            angular.forEach(FrightData, function (value, key) {
                var PortTariffID = 0;
                var RCID = 0;

                var CIDv = 0;
                if (typeof FrightData[key].CID != "undefined")
                    CIDv = FrightData[key].CID;
                else
                    CIDv = 0;
                if (typeof FrightData[key].CntrTypes.ID != "undefined") {

                    if (typeof FrightData[key].PortTariffID != "undefined" && FrightData[key].PortTariffID != "")
                        PortTariffID = FrightData[key].PortTariffID;
                    else
                        PortTariffID = 0;

                    if (typeof FrightData[key].RCID != "undefined" && FrightData[key].RCID != "")
                        RCID = FrightData[key].RCID;
                    else
                        RCID = 0;


                    FreightItems.push('Insert:' + PortTariffID, RCID, FrightData[key].CntrTypes.ID, FrightData[key].ChargeCodeID.ID, FrightData[key].CurrencyID.ID, FrightData[key].PaymentModeID.ID, FrightData[key].ReqRate, FrightData[key].ManifRate, FrightData[key].CustomerRate, FrightData[key].RateDiff, CIDv);
                }
            });
            BussData.FreightItems = FreightItems.toString();

            angular.forEach(TerminalData, function (value, key) {
                var CIDv = 0;
                if (typeof TerminalData[key].CID != "undefined")
                    CIDv = TerminalData[key].CID;
                else
                    CIDv = 0;
                if (typeof TerminalData[key].CntrTypes.ID != "undefined")
                    TerminalItems.push('Insert:' + TerminalData[key].PortTariffID, TerminalData[key].RCID, TerminalData[key].CntrTypes.ID, TerminalData[key].ChargeCodeID.ID, TerminalData[key].CurrencyID.ID, TerminalData[key].PaymentModeID.ID, TerminalData[key].ReqRate, TerminalData[key].ManifRate, TerminalData[key].CustomerRate, TerminalData[key].RateDiff, CIDv);
            });
            BussData.TerminalItems = TerminalItems.toString();


            angular.forEach(HaulData, function (value, key) {

                var CIDv = 0;
                if (typeof HaulData[key].CID != "undefined")
                    CIDv = HaulData[key].CID;
                else
                    CIDv = 0;

                var PortTariffv = 0;
                if (typeof HaulData[key].PortTariffID != "undefined")
                    PortTariffv = HaulData[key].PortTariffID;
                else
                    PortTariffv = 0;

                if (typeof HaulData[key].CntrTypes.ID != "undefined")
                    HaulagItems.push('Insert:' + PortTariffv, HaulData[key].RCID, HaulData[key].CntrTypes.ID, HaulData[key].ChargeCodeID.ID, HaulData[key].CurrencyID.ID, HaulData[key].PaymentModeID.ID, HaulData[key].ReqRate, HaulData[key].ManifRate, HaulData[key].CustomerRate, HaulData[key].RateDiff, CIDv);
            });
            BussData.HaulagItems = HaulagItems.toString();

            angular.forEach(ImpDate, function (value, key) {

                var CIDv = 0;
                if (typeof ImpDate[key].CID != "undefined")
                    CIDv = ImpDate[key].CID;
                else
                    CIDv = 0;

                var PortTariffv = 0;
                if (typeof ImpDate[key].PortTariffID != 'undefined')
                    PortTariffv = ImpDate[key].PortTariffID;
                else
                    PortTariffv = 0;

                if (typeof ImpDate[key].CntrTypes.ID != "undefined")
                    ImportItems.push('Insert:' + PortTariffv, ImpDate[key].RCID, ImpDate[key].CntrTypes.ID, ImpDate[key].ChargeCodeID.ID, ImpDate[key].CurrencyID.ID, ImpDate[key].PaymentModeID.ID, ImpDate[key].ReqRate, ImpDate[key].ManifRate, ImpDate[key].CustomerRate, ImpDate[key].RateDiff, CIDv);
            });
            BussData.ImportItems = ImportItems.toString();


            angular.forEach(ExpDate, function (value, key) {

                var CIDv = 0;
                if (typeof ExpDate[key].CID != "undefined")
                    CIDv = ExpDate[key].CID;
                else
                    CIDv = 0;


                var PortTariffv = 0;
                if (typeof ExpDate[key].PortTariffID != "undefined")
                    PortTariffv = ExpDate[key].PortTariffID;
                else
                    PortTariffv = 0;


                if (typeof ExpDate[key].CntrTypes.ID != "undefined")
                    ExportItems.push('Insert:' + PortTariffv, ExpDate[key].RCID, ExpDate[key].CntrTypes.ID, ExpDate[key].ChargeCodeID.ID, ExpDate[key].CurrencyID.ID, ExpDate[key].PaymentModeID.ID, ExpDate[key].ReqRate, ExpDate[key].ManifRate, ExpDate[key].CustomerRate, ExpDate[key].RateDiff, CIDv);
            });
            BussData.ExportItems = ExportItems.toString();



            angular.forEach(TSPortData, function (value, key)
            {
                TranshimentPort.push('Insert:' + TSPortData[key].PortID.ID);
            });
            BussData.TranshimentPort = TranshimentPort.toString();

            angular.forEach(GridMode, function (value, key) {
                ModeItems.push('Insert:' + GridMode[key].Mode.ID, GridMode[key].ExpFreeDays, GridMode[key].ImpFreeDays,);
            });
            BussData.ModeItems = ModeItems.toString();


 

            angular.forEach(SlotGridDate, function (value, key) {
                console.log(SlotGridDate);
                if (typeof SlotGridDate[key].SlotOperatorID != "undefined")
                {
                    var SlotAmt20 = 0;
                    var SlotAmt40 = 0;
                    if (typeof SlotGridDate[key].SlotAmt20 != 'undefined')
                        SlotAmt20 = SlotGridDate[key].SlotAmt20;
                    else
                        SlotAmt20 = 0;

                    if (typeof SlotGridDate[key].SlotAmt40 != 'undefined')
                        SlotAmt40 = SlotGridDate[key].SlotAmt40;
                    else
                        SlotAmt40 = 0;


                    SlotItem.push('Insert:' + SlotGridDate[key].SlotOperatorID,
                        SlotAmt20,
                        SlotAmt40, SlotGridDate[key].SlotTermID);
                }
                });
            BussData.SlotItems = SlotItem.toString();
            $http({
                method: 'POST',
                url: '/api/RRCorrection/RRCorrcetionUpdate',
                data: JSON.stringify(BussData),

            }).then(function (result) {
                $timeout(function ()
                {
                    if (result.data.length > 0)
                    {
                        if (result.data[0].ID != 0)
                        {
                           // $scope.RatesheetCastInsertNew(result.data[0].ID);
                            $scope.RegId = result.data[0].ID;
                            $scope.RatesheetNo = result.data[0].RatesheetNo;
                            $("#overlay").hide();
                            ShowPopup("Rate Request</br>" + result.data[0].RatesheetNo + " Update Sucessfully");
                            //$scope.btnSendEmailAlert();
                        }
                        else {
                            ShowPopup(result.data[0].ErrorMessage);
                        }

                    }
                    else {
                        $("#overlay").hide();
                        ShowPopup("Error Not saved");
                    }


                });
            }, function (result) {
                if (result.status == 500)
                {
                    $("#overlay").hide();
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404)
                {
                    $("#overlay").hide();
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0)
                {
                    $("#overlay").hide();
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                $("#overlay").hide();
                ShowPopup('There has been an error: ' + result);
            });
        }

        $scope.RatesheetCastInsertNew = function(RegID)
        {
            var BussData = {}
            BussData.ID = RegID;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetCastInsertNew',
                data: JSON.stringify(BussData),

            }).then(function (result) {
                $timeout(function () {
                    if (result.data.length > 0)
                    {
                        //$scope.RegId = result.data[0].ID;
                        //$scope.RatesheetNo = result.data[0].RatesheetNo;
                        //$("#overlay").hide();
                        //ShowPopup("Rate Request</br>" + result.data[0].RatesheetNo + " Created Sucessfully");
                    }
                    else {
                        $("#overlay").hide();
                        ShowPopup("Error Not saved");
                    }


                });
            }, function (result) {
                if (result.status == 500) {
                    $("#overlay").hide();
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    $("#overlay").hide();
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    $("#overlay").hide();
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                $("#overlay").hide();
                ShowPopup('There has been an error: ' + result);
            });

        }

        $scope.FilRateSheetExsitingMaster = function (RQRegNo) {

            var Datavalue = {};
            Datavalue.RRID = RQRegNo;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RateSheetExistingMasterRecord',
                data: JSON.stringify(Datavalue),

            }).then(function (result) {
                $timeout(function () {
                    $scope.DocumentsDownload = result.data;
                    $scope.RegId = result.data[0].ID;
                    $scope.txtRRNumber = result.data[0].RatesheetNo;

                    $('#txtDate').val(result.data[0].Date);
                    $scope.ddlbookingParty = { ID: result.data[0].BookingPartyID };
                    $scope.ExistDropdownbkgParty(result.data[0].BookingPartyID)
                    $scope.ddlSalesPerson = { ID: result.data[0].SalesPersonID };
                    $scope.ddlShipmentType = { ID: result.data[0].ShipmentID };
                    $scope.ddlPortOfOrg = { ID: result.data[0].PortOfOrgin };
                    $scope.ddlPortofLoading = { ID: result.data[0].PortOfLoading };
                    $scope.ddlExportHaulage = { ID: result.data[0].ExpHaulageID };
                    $scope.ddlPortofDischarge = { ID: result.data[0].PlaceofDischargeId };
                    $scope.ddlPortofFinalPOD = { ID: result.data[0].FinalPODId };
                    $scope.ddlImportHaulage = { ID: result.data[0].ImpHaulageId };
                    $scope.ddlTranshipment = { ID: result.data[0].TranshimentPortID };
                    $scope.ddlServiceType = { ID: result.data[0].ServiceTypeID };
                    $('#txtValidTill').val(result.data[0].ValidTill);

                    //$scope.txtValidTill = result.data[0].ValidTill;
                    $scope.txtRemark = result.data[0].Remarks;
                    $scope.divRRNo = result.data[0].RatesheetNo;
                    $scope.divStatus = result.data[0].Status;
                    $scope.ddlRoteType = { ID: result.data[0].RouteType };
                    $scope.ExistingRotType(result.data[0].RouteType);
                    $scope.ddlshipper = { ID: result.data[0].ShipperID };
                    $scope.ddlExportIHC = { ID: result.data[0].ExportIHC };
                    $scope.ddlImportIHC = { ID: result.data[0].ImportIHC };
                    $scope.IsRebate = result.data[0].IsRebate;
                    $scope.txtRebateAmount = result.data[0].RebateAmt;
                    $scope.txtOtherRemark = result.data[0].OtherRemarks;
                    $scope.ChekboxSingal = result.data[0].SingleUser;
                    $scope.divValidity = result.data[0].ValidTillStatus;
                    $scope.lblAttachment = result.data[0].DocumentAttached;
                    $scope.SlotFiledbyPrinclpal = result.data[0].SlotPrincipal;

                   



                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.FilRateSheetContinerExsitingMaster = function () {
            var Datavalue = {};
            Datavalue.RRID = $scope.RegId;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RateSheetContainerExsisting',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data[0].CntrTypeID != "") {
                        $scope.DynamicGridContainer.splice(0, 1);
                    }

                    angular.forEach(result.data, function (value, key) {

                        $scope.DynamicGridContainer.push({
                            'RCID': result.data[key].RCID,
                            'CntrTypes': { ID: result.data[key].CntrTypeID },
                            'CommodityTypes': { ID: result.data[key].CommodityTypeID },
                            'DGClass': { ID: result.data[key].DGClass },
                            'VGM': result.data[key].VGM

                        });

                    });
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.FilRateSheetModeExsitingMaster = function () {
            var Datavalue = {};
            Datavalue.RRID = $scope.RegId;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RateSheetModeExsisting',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data[0].Mode != "") {
                        $scope.DynamicGridMode.splice(0, 1);
                    }

                    angular.forEach(result.data, function (value, key) {

                        $scope.DynamicGridMode.push({
                            'Mode': { ID: result.data[key].Mode },
                            'ExpFreeDays': result.data[key].ExpFreeDays,
                            'ImpFreeDays': result.data[key].ImpFreeDays

                        });

                    });
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.FilRateSheetTsPortExsitingMaster = function () {
            var Datavalue = {};
            Datavalue.RRID = $scope.RegId;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RateSheetTsPortExsisting',
                data: JSON.stringify(Datavalue),
            }).then(function (result)
            {
                if (result.length > 0) {
                    $timeout(function () {

                        if (result.data[0].PortID != "") {
                            $scope.DynamicGridTsPort.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridTsPort.push({
                                'PortID': { ID: result.data[key].PortID },

                            });

                        });
                    });
                }
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }


        $scope.FillExistingFreightTraiffCharges = function () {
            var Datavalue = {};

            Datavalue.TraiffRegular = 135;
            Datavalue.ID = $scope.RegId;
            Datavalue.PaymentModeID = 18;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRTariffExistingValues',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridFreight.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridFreight.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }


        $scope.FillExistingTerminalTraiffCharges = function () {
            var Datavalue = {};

            Datavalue.TraiffRegular = 136;
            Datavalue.ID = $scope.RegId;
            Datavalue.PaymentModeID = 18;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRTariffExistingValues',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridTermainal.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridTermainal.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }


        $scope.FillExistingHaulageTraiffCharges = function () {
            var Datavalue = {};

            Datavalue.TraiffRegular = 137;
            Datavalue.ID = $scope.RegId;
            Datavalue.PaymentModeID = 18;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRTariffExistingValues',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridHaulage.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridHaulage.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }


        $scope.FillExistingImportTraiffCharges = function () {

            var Datavalue = {};

            Datavalue.TraiffRegular = 138;
            Datavalue.ID = $scope.RegId;
            Datavalue.PaymentModeID = 18;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRTariffLocalExistingValues',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridLocalImport.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGridLocalImport.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }


        $scope.FillExistingExportTraiffCharges = function () {
            var Datavalue = {};

            Datavalue.TraiffRegular = 138;
            Datavalue.ID = $scope.RegId;
            Datavalue.PaymentModeID = 19;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRTariffLocalExistingValues',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0) {

                        if (result.data[0].ChargeCodeID != "") {
                            $scope.DynamicGridLocalExport.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {
                            $scope.DynamicGridLocalExport.push({
                                'PortTariffID': result.data[key].PortTariffID,
                                'RCID': result.data[key].RCID,
                                'CntrTypes': { ID: result.data[key].CntrTypes },
                                'ChargeCodeID': { ID: result.data[key].ChargeCodeID },
                                'CurrencyID': { ID: result.data[key].CurrencyID },
                                'PaymentModeID': { ID: result.data[key].PaymentModeID },
                                'ReqRate': result.data[key].ReqRate,
                                'ManifRate': result.data[key].ManifRate,
                                'CustomerRate': result.data[key].CustomerRate,
                                'RateDiff': result.data[key].RateDiff,
                                'CID': result.data[key].CID

                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }


        $scope.FilRateSheetExsitingSlotAmount = function () {

            var Datavalue = {};
            Datavalue.RRID = $scope.RegId;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRExistSlotAmt',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {

                    if (result.data.length > 0)
                    {
                        $scope.DynamicGridSlotAmount.length = 0;
                        angular.forEach(result.data, function (value, key)
                        {
                            $scope.DynamicGridSlotAmount.push({
                                'SlotOperator': result.data[key].SlotOperator,
                                'SlotOperatorID': result.data[key].SlotOperatorID,
                                'SlotTermID': result.data[key].SlotTermID,
                                'SlotTerms': result.data[key].SlotTerms,
                                'SlotAmt20': result.data[key].SlotAmt20,
                                'SlotAmt40': result.data[key].SlotAmt40,
                                'SID': result.data[key].SID

                            });

                        });

                        console.log($scope.DynamicGridSlotAmount);
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
            //}).then(function (result) {
            //    $timeout(function () {

            //        $scope.DynamicGridSlotAmount.length = 0;
            //        if (result.data.length > 0) {


            //            angular.forEach(result.data, function (value, key) {
            //                $scope.DynamicGridSlotAmount.push({
            //                    'SlotOperatorID': result.data[key].SlotOperatorID,
            //                    'SlotAmt20': result.data[key].SlotAmt20,
            //                    'SlotAmt40': result.data[key].SlotAmt40


            //                });
            //            });
            //        }, function (result) {

            //            if (result.status > 0) {
            //                var errorMsg = result.status + ': ' + result.data;
            //                ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
            //            }
            //        });
            //}
}

        $scope.btnPrint = function () {
            var id = $scope.RegId;
            window.open('@Url.Action("RRPDF", "RateRequest")?id=' + id);
        }

         $scope.btnPrintSave = function () {
            var id = $scope.RegId;
             window.open('@Url.Action("RRPDFSave", "RateRequest")?id=' + id + "&AgentID=" + localStorage.getItem("AgencyID"));
            // $scope.ApprovalsSave();
        }

        //$scope.ApprovalsSave = function () {

        //    if (typeof $scope.RegId == "undefined" || typeof $scope.RegId == "") {
        //        ShowPopup("please fill RATE REQUEST first1");
        //        return;
        //    }
        //    var validation = "";
        //    $('#overlay').fadeIn().delay(100).fadeOut();
        //    var BussData = {}
        //    BussData.ID = $scope.RegId;
        //    BussData.status = 1;
        //    BussData.AgentId = localStorage.getItem("AgencyID");



        //    $http({
        //        method: 'POST',
        //        url: '/api/SalesApi/SalesRRSendApproval',
        //        data: JSON.stringify(BussData),

        //    }).then(function (result) {
        //        $timeout(function () {
        //            if (result.data.length != 0) {
        //                $scope.CheckStatusDetails();
        //                ShowPopup("Email Send Approval Successfully");
        //            }
        //            else {

        //                ShowPopup("Error Not saved");
        //            }

        //            setTimeOut(function () {
        //                window.location = "/";
        //            }, 3000);
        //        });
        //    }, function (result) {
        //        if (result.status == 500) {
        //            ShowPopup("Sorry no internet connectivity Application Error.");
        //        }
        //        else if (result.status == 404) {
        //            ShowPopup("Sorry no internet connectivity page not found.");
        //        }
        //        if (result.status > 0) {
        //            var errorMsg = result.status + ': ' + result.data;
        //            ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
        //        }
        //    }).catch(function (result) {

        //        ShowPopup('There has been an error: ' + result);
        //    });
        //}

        //$scope.CheckStatusDetails = function ()
        //{
        //    if (typeof $scope.RegId == "undefined" || typeof $scope.RegId == "") {
        //        ShowPopup("please fill RATE REQUEST first1");
        //        return;
        //    }
        //    var validation = "";
        //    var BussData = {}
        //    BussData.ID = $scope.RegId;

        //    $http({
        //        method: 'POST',
        //        url: '/api/SalesApi/SalesRRFinalSubmitCheck',
        //        data: JSON.stringify(BussData),

        //    }).then(function (result) {
        //        $timeout(function ()
        //        {
        //            $("#overlay").hide();
        //            if (result.data.length > 0)
        //            {
        //                if (result.data[0].Status == "4")
        //                {
        //                    document.getElementById('btnFetchTariff').disabled = true;
        //                    document.getElementById('btnFetchTariff').style.cursor = 'not-allowed';
        //                    document.getElementById("btnSubmit").disabled = true;
        //                    document.getElementById("btnSubmit").style.cursor = 'not-allowed';

        //                    document.getElementById("btnHistory").disabled = true;
        //                    document.getElementById("btnHistory").style.cursor = 'not-allowed';
        //                    document.getElementById("btnForceExpire").style.display = "inline-block";
        //                    document.getElementById("btnValidity").style.display = "inline-block";


        //                }
        //                else if (result.data[0].Status == "2" || result.data[0].Status == "5")
        //                {
        //                    document.getElementById("btnForceExpire").style.display = "none";
        //                    document.getElementById("btnValidity").style.display = "none";

        //                    document.getElementById("btnHistory").disabled = true;
        //                    document.getElementById("btnHistory").style.cursor = 'not-allowed';

        //                    document.getElementById('btnFetchTariff').disabled = true;
        //                    document.getElementById('btnFetchTariff').style.cursor = 'not-allowed';
        //                    document.getElementById("btnSubmit").disabled = true;
        //                    document.getElementById("btnSubmit").style.cursor = 'not-allowed';
        //                }
        //                else if (result.data[0].Status == "1" && result.data[0].Status == "3")
        //                {

        //                    document.getElementById("btnForceExpire").style.display = "none";
        //                    document.getElementById("btnValidity").style.display = "none";

        //                    document.getElementById("btnHistory").disabled = true;
        //                    document.getElementById("btnHistory").style.cursor = 'not-allowed';

        //                }

        //            }
        //            else {


        //                document.getElementById("btnForceExpire").style.display = "none";
        //                document.getElementById("btnValidity").style.display = "none";
        //                document.getElementById("btnSubmit").disabled = false;
        //                document.getElementById("btnSubmit").style.cursor = 'pointer';
        //                document.getElementById("btnFetchTariff").disabled = false;
        //                document.getElementById("btnFetchTariff").style.cursor = 'pointer';


        //                document.getElementById("btnHistory").disabled = false;
        //                document.getElementById("btnHistory").style.cursor = 'pointer';
        //                document.getElementById("btnPrint").disabled = false;
        //                document.getElementById("btnPrint").style.cursor = 'pointer';
        //            }

        //        });
        //    }, function (result) {
        //        if (result.status == 500) {
        //            ShowPopup("Sorry no internet connectivity Application Error.");
        //        }
        //        else if (result.status == 404) {
        //            ShowPopup("Sorry no internet connectivity page not found.");
        //        }
        //        if (result.status > 0) {
        //            var errorMsg = result.status + ': ' + result.data;
        //            ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
        //        }
        //    }).catch(function (result) {

        //        ShowPopup('There has been an error: ' + result);
        //    });
        //}

        $scope.ExistDropdownbkgParty = function (bkgparty) {
            var Datavalue = {};
            Datavalue.ID = bkgparty;

            $http({
                method: 'POST',
                url: '/api/SalesApi/RRBkgPartSales/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {
                    $scope.Result = result.data.length;

                    if ($scope.Result > 0) {
                        $scope.fillUserMasterValues(result.data.length);
                        $scope.ddlSalesPerson = { ID: result.data[0].ID };

                    }
                    else {
                        $scope.fillUserMasterValues(result.data.length);

                    }



                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        }

        $("#ddlbookingParty").change(function () {

            var Datavalue = {};
            Datavalue.ID = $("#ddlbookingParty").val();
            $http({
                method: 'POST',
                url: '/api/SalesApi/RRBkgPartSales/',
                data: JSON.stringify(Datavalue)
            }).then(function (result) {
                $timeout(function () {
                    $scope.Result = result.data.length;

                     if ($scope.Result > 0) {
                        $scope.fillUserMasterValues(result.data.length);
                         $scope.ddlSalesPerson = { ID: result.data[0].ID };
                         $("#ddlSalesPerson").val(result.data[0].ID).trigger("change");
                    }
                    else {
                        $scope.fillUserMasterValues(result.data.length);

                    }


                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        });

        $("#ddlPortOfOrg").change(function () {
            var id = $("#ddlPortOfOrg").val();
            if (id != null) {
                document.getElementById("ddlExportHaulage").disabled = false;
                document.getElementById("ddlExportIHC").disabled = false;

            }
            else {

                document.getElementById("ddlExportHaulage").disabled = true;
                document.getElementById("ddlExportIHC").disabled = true;
                $("#ddlExportHaulage").val(null).trigger("change");
                $("#ddlExportIHC").val(null).trigger("change");
            }

        });

        $("#ddlPortofFinalPOD").change(function () {
            var id = $("#ddlPortofFinalPOD").val();
            if (id != null) {
                document.getElementById("ddlImportHaulage").disabled = false;
                document.getElementById("ddlImportIHC").disabled = false;

            }
            else {

                document.getElementById("ddlImportHaulage").disabled = true;
                document.getElementById("ddlImportIHC").disabled = true;
                $("#ddlImportHaulage").val(null).trigger("change");
                $("#ddlImportIHC").val(null).trigger("change");
            }

        });

        $("#ddlRoteType").change(function () {


            var id = $("#ddlRoteType").val();
            if (id == 1)
            {
                document.getElementById("btnTranship").style.display = "none";
                document.getElementById("ddlTranshipment").disabled = true;
                $("#ddlTranshipment").val(null).trigger("change");

            }
            else if (id == 2)
            {
                document.getElementById("ddlTranshipment").disabled = false;
                document.getElementById("btnTranship").style.display = "block";
                $("#ddlTranshipment").val(null).trigger("change");

            }

        });
        $scope.ExistingRotType = function (RouteType) {
            var id = RouteType
            if (id == 1) {
                document.getElementById("btnTranship").style.display = "none";
                document.getElementById("ddlTranshipment").disabled = true;
                $("#ddlTranshipment").val(null).trigger("change");

            }
            else if (id == 2) {
                document.getElementById("ddlTranshipment").disabled = false;
                document.getElementById("btnTranship").style.display = "block";
                $("#ddlTranshipment").val(null).trigger("change");

            }
        }

        $scope.ModeFunction = function (gRow, Index) {
            if (gRow.Mode.ID == 1) {

                $scope.DynamicGridMode.length = 0;
                $scope.DynamicGridMode.push({
                    'Mode': { ID: 1 },
                    'ExpFreeDays': "",
                    'ImpFreeDays': ""
                });
            }

            if (Index == 1) {
            } else {
                if (gRow.Mode.ID != 1) {
                    $scope.DynamicGridMode.push({
                        'Mode': "",
                        'ExpFreeDays': "",
                        'ImpFreeDays': ""
                    });
                }
            }
        }

        $scope.SelectedFiles = null;
        $scope.UploadFiles = function (files) {

            $scope.SelectedFiles = files;
            if ($scope.SelectedFiles && $scope.SelectedFiles.length) {
                if ($scope.SelectedFiles && $scope.SelectedFiles.length) {
                    Upload.upload({
                        url: '/Sales/Upload/',
                        data: {
                            files: $scope.SelectedFiles

                        }
                    }).then(function (response) {
                        $timeout(function () {

                            $scope.txtFileName = response.data;
                            $('#upload-file-info').text("");

                        });
                    }, function (response) {
                        if (response.status > 0) {
                            var errorMsg = response.status + ': ' + response.data;

                        }
                    }, function (evt) {
                        var element = angular.element(document.querySelector('#dvProgress'));
                        $scope.Progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));
                        element.html('<div style="width: ' + $scope.Progress + '%">' + $scope.Progress + '%</div>');
                    });
                }

            }

        }

        $scope.btnFreightImportChargeCalculation = function (DataFreightImp)
        {

            var FreightImport = 0;
            angular.forEach(DataFreightImp, function (value, key) {
                FreightImport += parseFloat(DataFreightImp[key].CustomerRate);
            });

            $scope.LocalChargeImpAmt = FreightImport;

           // $('#demoModal').hide();
            ShowPopup("Update Origin Charges");

            //var url = "/Sales/RRForm?RQRegNo=" + encodeURIComponent($scope.RegId);
            //window.location.href = url;

        }

        $scope.btnFreightExportChargeCalculation = function (DataFreightExp) {

            var FreightExport = 0;
            angular.forEach(DataFreightExp, function (value, key) {
                FreightExport += parseFloat(DataFreightExp[key].CustomerRate);
            });

            $scope.LocalChargeExpAmt = FreightExport;

            //$('#demoModalExport').hide();
            ShowPopup("Update Destination Local Charges");


            //var url = "/Sales/RRForm?RQRegNo=" + encodeURIComponent($scope.RegId);
            //window.location.href = url;
        }

        $scope.FreightAdd = function (DynamicGridFreight) {

            if (DynamicGridFreight.CntrTypes.ID == "") {
                swal("Please enter CntrTypes");
                return;
            }

            $scope.DynamicGridFreight.push({
                'RCID': "",
                'CntrTypes': "",
                'ChargeCodeID': "",
                'CurrencyID': "",
                'PaymentModeID': "",
                'ReqRate': "",
                'ManifRate': "",
                'CustomerRate': "",
                'RateDiff': "",
                'RCID': ""
            });
        }

        $scope.FreightRemove = function (DynamicGridFreight, index, CID) {
            var BussData = {}
            if (CID == "")
                CID = 0;
            BussData.CID = CID;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetGridValueDelete/',
                data: JSON.stringify(BussData),
            }).then(function (result) {
                $timeout(function () {
                    $scope.DynamicGridFreight.splice(index, 1);
                });
            });

        }

        $scope.TerminalAdd = function (DynamicGridTermainal) {

            if (DynamicGridTermainal.CntrTypes.ID == "") {
                swal("Please enter CntrTypes");
                return;
            }

            $scope.DynamicGridTermainal.push({
                'RCID': "",
                'CntrTypes': "",
                'ChargeCodeID': "",
                'CurrencyID': "",
                'PaymentModeID': "",
                'ReqRate': "",
                'ManifRate': "",
                'CustomerRate': "",
                'RateDiff': "",
                'RCID': ""
            });
        }

        $scope.TerminalRemove = function (DynamicGridTermainal, index, CID) {

            var BussData = {}
            if (CID == "")
                CID = 0;
            BussData.CID = CID;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetGridValueDelete/',
                data: JSON.stringify(BussData),
            }).then(function (result) {
                $timeout(function () {
                    $scope.DynamicGridTermainal.splice(index, 1);
                });
            });
        }

        $scope.HaulageAdd = function (DynamicGridHaulage) {

            if (DynamicGridHaulage.CntrTypes.ID == "") {
                swal("Please enter CntrTypes");
                return;
            }

            $scope.DynamicGridHaulage.push({
                'RCID': "",
                'CntrTypes': "",
                'ChargeCodeID': "",
                'CurrencyID': "",
                'PaymentModeID': "",
                'ReqRate': "",
                'ManifRate': "",
                'CustomerRate': "",
                'RateDiff': "",
                'RCID': ""
            });
        }


        $scope.DynamicSlotAdd = function (DynamicGridSlotAmount)
        {

            var validation = "";

            var ddlSlotOperatorID = $('#ddlSlotOperatorID').val();
            if (ddlSlotOperatorID == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select SlotOperator</span></br>"
            }

            var ddlSlotTerm = $('#ddlSlotTerm').val();
            if (ddlSlotTerm == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select SlotTerms</span></br>"
            }


            if (validation != "") {
                ShowPopup(validation);
                return false;
            }

            var TIDValue;
            TIDValue = ($scope.TID == "") ? 0 : $scope.TID;

            var val = {
                'TID': TIDValue,
                'SlotOperatorID': $("#ddlSlotOperatorID").val(),
                'SlotOperator': $("#ddlSlotOperatorID option:selected").text(),
                'SlotTermID': $("#ddlSlotTerm").val(),
                'SlotTerms': $("#ddlSlotTerm option:selected").text(),
                'SlotAmt20': $scope.SlotAmt20,
                'SlotAmt40': $scope.SlotAmt40,


            };
            if ($scope.HDArrayIndex != null && $scope.HDArrayIndex.length != 0) {
                $scope.DynamicGridSlotAmount[$scope.HDArrayIndex] = val;
            } else {
                $scope.DynamicGridSlotAmount.push(val);
            }

            $("#ddlSlotOperatorID").val(null).trigger("change");
            $("#ddlSlotTerm").val(null).trigger("change");
            $scope.SlotAmt20 = "";
            $scope.SlotAmt40 = "";
            $scope.HDArrayIndex = "";
            $scope.TID = 0;
        }


        $scope.DynamicSlotRemove = function (DynamicGridSlotAmount, index, TID) {


            var BussData = {}
            if (TID == "")
                TID = 0;

            BussData.ID = TID;

            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetSlotDelete/',
                data: JSON.stringify(BussData),
            }).then(function (result) {
                $timeout(function () {
                    $scope.DynamicGridSlotAmount.splice(index, 1);
                    // $scope.FilRateSheetExsitingSlotAmount();
                });
            });



        }
        $scope.Selectvalues = function (DynamicGridSlotAmount, index)
        {
            console.log($scope.DynamicGridSlotAmount[index].SlotOperatorID);

            $scope.HDArrayIndex = index;
            $scope.TID = $scope.DynamicGridSlotAmount[index].TID;
            $("#ddlSlotOperatorID").select2().val($scope.DynamicGridSlotAmount[index].SlotOperatorID);
            $("#ddlSlotTerm").select2().val($scope.DynamicGridSlotAmount[index].SlotTermID);
            $scope.SlotAmt20 = $scope.DynamicGridSlotAmount[index].SlotAmt20;
            $scope.SlotAmt40 = $scope.DynamicGridSlotAmount[index].SlotAmt40;
            $("#ddlSlotOperatorID").select2().val($scope.DynamicGridSlotAmount[index].SlotOperatorID);
            $("#ddlSlotTerm").select2().val($scope.DynamicGridSlotAmount[index].SlotTermID);

        }


        //$scope.DynamicSlotRemove = function (DynamicGridSlotAmount, index) {
        //    $scope.DynamicGridSlotAmount.splice(index, 1);
        //}

        $scope.HaulageRemove = function (DynamicGridHaulage, index, CID) {


            var BussData = {}
            if (CID == "")
                CID = 0;
            BussData.CID = CID;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetGridValueDelete/',
                data: JSON.stringify(BussData),
            }).then(function (result) {
                $timeout(function () {
                    $scope.DynamicGridHaulage.splice(index, 1);
                });
            });


        }

        $scope.FreightLocalImpAdd = function (DynamicGridLocalImport) {

            if (DynamicGridLocalImport.CntrTypes.ID == "") {
                swal("Please enter CntrTypes");
                return;
            }

            $scope.DynamicGridLocalImport.push({
                'RCID': "",
                'CntrTypes': "",
                'ChargeCodeID': "",
                'CurrencyID': "",
                'PaymentModeID': "",
                'ReqRate': "",
                'ManifRate': "",
                'CustomerRate': "",
                'RateDiff': "",
                'RCID': ""
            });
        }

        $scope.FreightLocalImpRemove = function (DynamicGridLocalImport, index, CID)
        {
            alert('Muthu');
            var BussData = {}
            if (CID == "")
                CID = 0;
            BussData.CID = CID;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetGridValueDelete/',
                data: JSON.stringify(BussData),
            }).then(function (result) {
                $timeout(function () {
                    $scope.DynamicGridLocalImport.splice(index, 1);
                });
            });

        }

        $scope.FreightLocExpAdd = function (DynamicGridLocalExport) {

            if (DynamicGridLocalExport.CntrTypes.ID == "") {
                swal("Please enter CntrTypes");
                return;
            }

            $scope.DynamicGridLocalExport.push({
                'RCID': "",
                'CntrTypes': "",
                'ChargeCodeID': "",
                'CurrencyID': "",
                'PaymentModeID': "",
                'ReqRate': "",
                'ManifRate': "",
                'CustomerRate': "",
                'RateDiff': "",
                'RCID': ""
            });
        }

        $scope.FreightLocExpRemove = function (DynamicGridLocalExport, index, CID) {


            var BussData = {}
            if (CID == "")
                CID = 0;
            BussData.CID = CID;
            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetGridValueDelete/',
                data: JSON.stringify(BussData),
            }).then(function (result) {
                $timeout(function () {
                    $scope.DynamicGridLocalExport.splice(index, 1);
                });
            });


        }

        $scope.FreighRateCalculation = function (gRow)
        {
            var defAmt = parseFloat(gRow.CustomerRate) - parseFloat(gRow.ManifRate);
            gRow.RateDiff = defAmt;
        }

        $scope.TerminlaRateCalculation = function (gRow) {
            var defAmt = parseFloat(gRow.CustomerRate) - parseFloat(gRow.ManifRate);
            gRow.RateDiff = defAmt;
        }

        $scope.HaulageRateCalculation = function (gRow) {
            var defAmt = parseFloat(gRow.CustomerRate) - parseFloat(gRow.ManifRate);
            gRow.RateDiff = defAmt;
        }

        $scope.FreighLocImpRateCalculation = function (gRow) {
            var defAmt = parseFloat(gRow.CustomerRate) - parseFloat(gRow.ManifRate);
            gRow.RateDiff = defAmt;
        }

        $scope.FreighLocExpRateCalculation = function (gRow) {
            var defAmt = parseFloat(gRow.CustomerRate) - parseFloat(gRow.ManifRate);
            gRow.RateDiff = defAmt;
        }

        $scope.FilRateSheetExsitingFreightImpRate = function () {

            var Datavalue = {};
            Datavalue.RRID = $scope.RegId;
            Datavalue.TraiffRegular = 138;
            Datavalue.PaymentModeID = 18;
            $http({
                method: 'POST',
                url: '/api/SalesApi/ExistRateFreightLocalChargeAmt',
                data: JSON.stringify(Datavalue),

            }).then(function (result) {
                $timeout(function ()
                {
                    $scope.LocalChargeImpAmt = result.data[0].Amount;
                    $scope.LocalChargeImpCurrency = result.data[0].Currency;


                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }

        $scope.FilRateSheetExsitingFreightExpRate = function () {

            var Datavalue = {};
            Datavalue.RRID = $scope.RegId;
            Datavalue.TraiffRegular = 138;
            Datavalue.PaymentModeID = 19;
            $http({
                method: 'POST',
                url: '/api/SalesApi/ExistRateFreightLocalChargeAmt',
                data: JSON.stringify(Datavalue),

            }).then(function (result) {
                $timeout(function ()
                {
                    if (result.data.length > 0) {
                        $scope.LocalChargeExpAmt = result.data[0].Amount;
                        $scope.LocalChargeExpCurrency = result.data[0].Currency;
                    }

                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });
        }




        $scope.NewRatesheetCreation = function (CntrData, FrightData, TerminalData, HaulData, ImpDate, ExpDate, TSPortData, GridMode) {

            var validation = "";
            var txtDate = $('#txtExtDat').val();
            if (txtDate.length == 0) {
                validation += "<span style='color:red;'>*</span> <span>Please Ente Validity Extension</span></br>"
            }

            var ddlbookingParty = $('#ddlbookingParty').val();
            if (ddlbookingParty == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Booking Party</span></br>"
            }

            var ddlSalesPerson = $('#ddlSalesPerson').val();
            if (ddlSalesPerson == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please select Sales Person</span></br>"
            }

            var ddlShipmentType = $('#ddlShipmentType').val();
            if (ddlShipmentType == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select ShipmentTypes</span></br>"
            }

            //var ddlPortOfOrg = $('#ddlPortOfOrg').val();
            //if (ddlPortOfOrg == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Port of Orgin</span></br>"
            //}

            var ddlPortofLoading = $('#ddlPortofLoading').val();
            if (ddlPortofLoading == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port of Loading</span></br>"
            }

            //var ddlExportHaulage = $('#ddlExportHaulage').val();
            //if (ddlExportHaulage == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Export Haulage</span></br>"
            //}

            var ddlPortofDischarge = $('#ddlPortofDischarge').val();
            if (ddlPortofDischarge == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Port of Discharge</span></br>"
            }

            //var ddlPortofFinalPOD = $('#ddlPortofFinalPOD').val();
            //if (ddlPortofFinalPOD == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Port of Final POD</span></br>"
            //}

            var ddlServiceType = $('#ddlServiceType').val();
            if (ddlServiceType == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Service Types</span></br>"
            }

            var txtValidTill = $('#txtValidTill').val();
            if (txtValidTill.length == 0) {
                validation += "<span style='color:red;'>*</span> <span>Please Enter ValidTill Date</span></br>"
            }
            var ddlRoteType = $('#ddlRoteType').val();
            if (ddlRoteType == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Rote Type</span></br>"
            }

            var ddlshipper = $('#ddlshipper').val();
            if (ddlshipper == "?") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Shipper Name</span></br>"
            }

            //var ddlExportIHC = $('#ddlExportIHC').val();
            //if (ddlExportIHC == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Export IHC</span></br>"
            //}
            //var ddlImportIHC = $('#ddlImportIHC').val();
            //if (ddlImportIHC == "?") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Import IHC</span></br>"
            //}

            var VGMValue = "";
            var Datav = "undefined";
            angular.forEach(CntrData, function (value, key) {
                Datav += CntrData[key].CntrTypes.ID;
                VGMValue += CntrData[key].VGM;

            });

            if (Datav.toString() == "undefined") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Container Details</span></br>"
            }

            if (VGMValue.toString() == "") {
                validation += "<span style='color:red;'>*</span> <span>Please Enter Container VGMNo</span></br>"
            }



            var DataFreightv = "undefined";

            angular.forEach(FrightData, function (value, key) {
                DataFreightv += FrightData[key].CntrTypes.ID;

            });

            if (DataFreightv.toString() == "undefined") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Freight Details</span></br>"
            }

            angular.forEach(FrightData, function (value, key) {
                if (FrightData[key].ChargeCodeID.ID == "1") {
                    if (FrightData[key].ManifRate == "0" || FrightData[key].ManifRate == "0.00") {
                        validation += "<span style='color:red;'>*</span> <span>Ocean Freight is NIL, Kindly update Manifest Rate</span></br>"
                    }
                    if (FrightData[key].CustomerRate == "0" || FrightData[key].CustomerRate == "0.00") {
                        validation += "<span style='color:red;'>*</span> <span>Ocean Freight is NIL, Kindly update Customer Rate</span></br>"
                    }
                }

            });

            var DataTerminalv = "undefined";
            angular.forEach(TerminalData, function (value, key) {
                DataTerminalv += TerminalData[key].CntrTypes.ID;
            });

            if (DataTerminalv.toString() == "undefined") {
                validation += "<span style='color:red;'>*</span> <span>Please Select Termilan Details</span></br>"
            }

            var DataHaulagev = "undefined";
            angular.forEach(HaulData, function (value, key) {
                DataHaulagev += TerminalData[key].CntrTypes.ID;
            });

            //if (DataHaulagev.toString() == "undefined") {
            //    validation += "<span style='color:red;'>*</span> <span>Please Select Haulage Details</span></br>"
            //}


            if (validation != "") {
                ShowPopup(validation);
                return false;
            }

            $('#overlay').fadeIn().delay(1000).fadeOut();
            var BussData = {}
            var CntrItems = []
            var FreightItems = []
            var TerminalItems = []
            var HaulagItems = []
            var ImportItems = []
            var ExportItems = []
            var TranshimentPort = [];
            var ModeItems = [];

            BussData.ExtRRID = $scope.RegId;
            $scope.RegId = "";
            if ($scope.RegId == "")
                BussData.ID = 0;
            else
                BussData.ID = $scope.RegId;


            BussData.RatesheetNo = $scope.txtRRNumber;
            BussData.Date = $("#txtDate").val();
            BussData.ValidTill = $("#txtValidTill").val();

            BussData.BookingPartyID = $("#ddlbookingParty").val();
            BussData.SalesPersonID = $("#ddlSalesPerson").val();
            BussData.ShipmentID = $("#ddlShipmentType").val();


            if ($("#ddlPortOfOrg").val() != null)
                BussData.PortOfOrgin = $("#ddlPortOfOrg").val();
            else
                BussData.PortOfOrgin = 0;


            BussData.PortOfLoading = $("#ddlPortofLoading").val();
            BussData.ExpHaulageID = $("#ddlExportHaulage").val();

            BussData.PlaceofDischargeId = $("#ddlPortofDischarge").val();


            if ($("#ddlPortofFinalPOD").val() != null)
                BussData.FinalPODId = $("#ddlPortofFinalPOD").val();
            else
                BussData.FinalPODId = 0;

            BussData.ImpHaulageId = $("#ddlImportHaulage").val();
            BussData.RouteType = $('#ddlRoteType').val();

            if ($("#ddlTranshipment").val() != null)
                BussData.TranshimentPortID = $("#ddlTranshipment").val();
            else
                BussData.TranshimentPortID = 0;


            BussData.ShipperID = $('#ddlshipper').val();

            if ($("#ddlExportIHC").val() != "?")
                BussData.ExportIHC = $("#ddlExportIHC").val();
            else
                BussData.ExportIHC = 0;

            if ($("#ddlImportIHC").val() != "?")
                BussData.ImportIHC = $("#ddlImportIHC").val();
            else
                BussData.ImportIHC = 0;

            BussData.ServiceTypeID = $("#ddlServiceType").val();


            if ($scope.IsRebat != "")
                BussData.IsRebate = $scope.IsRebat;
            else
                BussData.IsRebate = 0;


            if ($("#txtRebateAmount").val() != "")
                BussData.RebateAmt = $scope.txtRebateAmount;
            else
                BussData.RebateAmt = 0;

            if ($('#ChekboxSingal').prop('checked'))
                BussData.SingleUser = 1;
            else
                BussData.SingleUser = 0;

            BussData.UserID = localStorage.getItem("UserID");
            BussData.AgentId = localStorage.getItem("AgencyID");
            BussData.SessionFinYear = new Date().getFullYear();
            BussData.AgentCode = localStorage.getItem("DocumentSuffix");
            BussData.Remarks = $scope.txtRemark;
            BussData.OtherRemarks = $scope.txtOtherRemark;
            BussData.DocumentAttached = $scope.txtFileName;

            angular.forEach(CntrData, function (value, key) {

                var IDR = 0;
                if (CntrData[key].RCID == "") {
                    IDR = 0;
                }
                else {

                    IDR = CntrData[key].RCID;

                }
                CntrItems.push('Insert:' + IDR, CntrData[key].CntrTypes.ID, CntrData[key].CommodityTypes.ID, CntrData[key].DGClass.ID, CntrData[key].VGM);
            });
            BussData.CntrItems = CntrItems.toString();

            angular.forEach(FrightData, function (value, key) {
                if (typeof FrightData[key].CntrTypes.ID != "undefined") {
                    FreightItems.push('Insert:' + FrightData[key].PortTariffID, FrightData[key].RCID, FrightData[key].CntrTypes.ID, FrightData[key].ChargeCodeID.ID, FrightData[key].CurrencyID.ID, FrightData[key].PaymentModeID.ID, FrightData[key].ReqRate, FrightData[key].ManifRate, FrightData[key].CustomerRate, FrightData[key].RateDiff);
                }
            });
            BussData.FreightItems = FreightItems.toString();

            angular.forEach(TerminalData, function (value, key) {
                if (typeof TerminalData[key].CntrTypes.ID != "undefined")
                    TerminalItems.push('Insert:' + TerminalData[key].PortTariffID, TerminalData[key].RCID, TerminalData[key].CntrTypes.ID, TerminalData[key].ChargeCodeID.ID, TerminalData[key].CurrencyID.ID, TerminalData[key].PaymentModeID.ID, TerminalData[key].ReqRate, TerminalData[key].ManifRate, TerminalData[key].CustomerRate, TerminalData[key].RateDiff);
            });
            BussData.TerminalItems = TerminalItems.toString();


            angular.forEach(HaulData, function (value, key) {
                if (typeof HaulData[key].CntrTypes.ID != "undefined")
                    HaulagItems.push('Insert:' + HaulData[key].PortTariffID, HaulData[key].RCID, HaulData[key].CntrTypes.ID, HaulData[key].ChargeCodeID.ID, HaulData[key].CurrencyID.ID, HaulData[key].PaymentModeID.ID, HaulData[key].ReqRate, HaulData[key].ManifRate, HaulData[key].CustomerRate, HaulData[key].RateDiff);
            });
            BussData.HaulagItems = HaulagItems.toString();

            angular.forEach(ImpDate, function (value, key) {
                if (typeof ImpDate[key].CntrTypes.ID != "undefined")
                    ImportItems.push('Insert:' + ImpDate[key].PortTariffID, ImpDate[key].RCID, ImpDate[key].CntrTypes.ID, ImpDate[key].ChargeCodeID.ID, ImpDate[key].CurrencyID.ID, ImpDate[key].PaymentModeID.ID, ImpDate[key].ReqRate, ImpDate[key].ManifRate, ImpDate[key].CustomerRate, ImpDate[key].RateDiff);
            });
            BussData.ImportItems = ImportItems.toString();


            angular.forEach(ExpDate, function (value, key) {
                if (typeof ExpDate[key].CntrTypes.ID != "undefined")
                    ExportItems.push('Insert:' + ExpDate[key].PortTariffID, ExpDate[key].RCID, ExpDate[key].CntrTypes.ID, ExpDate[key].ChargeCodeID.ID, ExpDate[key].CurrencyID.ID, ExpDate[key].PaymentModeID.ID, ExpDate[key].ReqRate, ExpDate[key].ManifRate, ExpDate[key].CustomerRate, ExpDate[key].RateDiff);
            });
            BussData.ExportItems = ExportItems.toString();


            angular.forEach(TSPortData, function (value, key) {
                TranshimentPort.push('Insert:' + TSPortData[key].PortID.ID);
            });
            BussData.TranshimentPort = TranshimentPort.toString();

            angular.forEach(GridMode, function (value, key) {
                ModeItems.push('Insert:' + GridMode[key].Mode.ID, GridMode[key].ExpFreeDays, GridMode[key].ImpFreeDays,);
            });
            BussData.ModeItems = ModeItems.toString();

            $http({
                method: 'POST',
                url: '/api/SalesApi/RatesheetValidityInsert',
                data: JSON.stringify(BussData),

            }).then(function (result) {
                $timeout(function () {
                    if (result.data[0].ID != "0") {
                      //  $scope.RatesheetCastInsertNew(result.data[0].ID);
                        $scope.RegId = result.data[0].ID;
                        $scope.RatesheetNo = result.data[0].RatesheetNo;
                        ShowPopup("RR New Booking Created");
                        var url = "/Sales/RaterequestView";
                        window.location.href = url;
                    }
                    else {

                        ShowPopup("Error Not saved");
                    }


                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {

                ShowPopup('There has been an error: ' + result);
            });


        }

        //$scope.btnForceExpire = function () {

        //    var BussData = {}
        //    BussData.ID = $scope.RegId;

        //    $http({
        //        method: 'POST',
        //        url: '/api/SalesApi/RRForeExpire',
        //        data: JSON.stringify(BussData),

        //    }).then(function (result) {
        //        $timeout(function () {
        //            if (result.data.length>0)
        //            {

        //                ShowPopup("RR Force Expire");
        //                var url = "/Sales/RaterequestView";
        //                window.location.href = url;
        //            }
        //            else {

        //                ShowPopup("Error Not saved");
        //            }


        //        });
        //    }, function (result) {
        //        if (result.status == 500) {
        //            ShowPopup("Sorry no internet connectivity Application Error.");
        //        }
        //        else if (result.status == 404) {
        //            ShowPopup("Sorry no internet connectivity page not found.");
        //        }
        //        if (result.status > 0) {
        //            var errorMsg = result.status + ': ' + result.data;
        //            ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
        //        }
        //    }).catch(function (result) {

        //        ShowPopup('There has been an error: ' + result);
        //    });
        //}


        //$scope.btnValidityExisting = function () {

        //}

        $scope.DDLComdityTypeCheck = function (gRow) {

            console.log(gRow);
            if (gRow.CommodityTypes.ID == "4") {
                $scope.IsValidDGClass = false;
            }
            else
                $scope.IsValidDGClass = true;

        }

        //$scope.btnSendEmailAlert = function () {

        //    $("#overlay").show();
        //    var Datavalue = {};
        //    Datavalue.ID = $scope.RegId;
        //    Datavalue.AgentId = localStorage.getItem("AgencyID");
        //    //Datavalue.To = $scope.txtTo;
        //    //Datavalue.CC = $scope.txtCC;
        //    //Datavalue.BCC = $scope.txtBCC;
        //    //Datavalue.Message = $scope.txtMessage;

        //    $http({
        //        method: 'POST',
        //        url: '/api/SendingEmailsApi/EmailsendingRateSheet/',
        //        data: JSON.stringify(Datavalue),
        //    }).then(function (result) {
        //        $timeout(function () {
        //            if (result.data.length > 0) {
        //                ShowPopup(result.data[0].AlertMessage);
        //                $("#overlay").hide();
        //            }
        //        });
        //        $("#overlay").hide();
        //    }, function (result) {
        //        if (result.status == 500) {
        //            ShowPopup("Sorry no internet connectivity Application Error.");
        //        }
        //        else if (result.status == 404) {
        //            ShowPopup("Sorry no internet connectivity page not found.");
        //        }
        //        if (result.status > 0) {
        //            var errorMsg = result.status + ': ' + result.data;
        //            ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
        //        }
        //    }).catch(function (result) {
        //        ShowPopup('There has been an error: ' + result);
        //    });
        //}

        //$scope.RateRequestHistoryView = function () {
        //    var BussData = {}

        //    BussData.RRID = $scope.RegId;
        //    alert(BussData.RRID);
        //    $http({
        //        method: 'POST',
        //        url: "/api/SalesApi/RRHistory",
        //        data: JSON.stringify(BussData),
        //    }).then(function (result) {
        //        $timeout(function () {
        //            $scope.RateRequestHistoryView = result.data;

        //        });
        //    }, function (result) {

        //        if (result.status > 0) {
        //            var errorMsg = result.status + ': ' + result.data;
        //            ShowPopup("Sorry no internet connectivity detected. Please reconnect and try again.");
        //        }
        //    });

        //};
          $scope.DownloadFile = function (fileName) {

            var string = fileName;
              var AttachedFile = string.replace('#', 'Ash_value');
              window.location.href = '@Url.Action("DownloadAttachment", "Sales")?fileName=' + AttachedFile;

        };

        $scope.OnChangeCntrTypes = function(gRow, indexv)
        {

            var CntrT = gRow.CntrTypes.ID;
            var IsFalse = 0;
            angular.forEach($scope.DynamicGridContainer, function (value, key)
            {

                if (indexv != key) {
                    if (CntrT == $scope.DynamicGridContainer[key].CntrTypes.ID) {
                        IsFalse = 1;
                        return;
                    }

                }

            });
            if (IsFalse == 1) {
                gRow.CntrTypes.ID = 0;
                $("#ddlCntrTypes" + indexv).val("0");
                $scope.DynamicGridContainer.splice(indexv, 1);
                ShowPopup("CntrType alredy exists");
                return;
            }

        }

        $scope.SlotFiledbyPrinclpalCheck = function (val) {

            if (val == 1)
                $scope.SlotbyPrincipal = true;
            else
                $scope.SlotbyPrincipal = false;

        }


        $("#btnTranship").click(function () {



            var id = $("#ddlRoteType").val();
            if (id == 2) {
                $('#demoModalTranshipment').modal('show');
                if (typeof $scope.RegId != "undefined")
                {
                    var Datavalue = {};
                    Datavalue.RRID = $scope.RegId;
                    $http({
                        method: 'POST',
                        url: '/api/SalesApi/ExistRateTranshipmentPort',
                        data: JSON.stringify(Datavalue),

                    }).then(function (result) {
                        $timeout(function () {

                            $scope.DynamicGridTsPort.length = 0;

                            angular.forEach(result.data, function (value, key) {
                                $scope.DynamicGridTsPort.push({
                                    'PortID': { ID: result.data[key].PortID },
                                });

                            });

                            console.log($scope.DynamicGridTsPort);

                        });
                    }, function (result) {

                        if (result.status > 0) {
                            var errorMsg = result.status + ': ' + result.data;
                            ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                        }
                    });

                }
            }


        });

    });

    function numericvalidation() {
        var key = event.keyCode;
        //if ((key >= 48) && (key <= 58) || (key == 46))
        //if ((key >= 48) && (key <= 58) || (key == 46) || (key == 109) || (key == 189))
        //    return true;
        //else
        //    return false;

        if (key != 46 && key != 45 && key != 46 &&
            !(key >= 48 && key <= 57)) {
            return false;
        }
    }
    function ShowPopup(message) {
        swal(message);
    };


</script>

<script type="text/javascript">
    $(function () {
        $("#btnLocalImportCharge").click(function () {
            $('#demoModal').modal('show');
        });

        $("#btnLocalExportCharge").click(function () {
            $('#demoModalExport').modal('show');
        });


        $("#btnHistory").click(function () {
            $('#demoModalHistory').modal('show');
        });

        $("#btnValidity").click(function () {

            $('#demoModalValidate').modal('show');

        });

    });
</script>
<style>
        /*.btn.btnforce
        {
            display: initial;
        float: left;
        left: 575px;
    }
        .btn.btnvalidity {
            display: initial;
            float: left;
            left:310px;
        }

        @@media(max-width:1280px)
        {
            .btn.btnforce {
                display: initial;
                float: left;
                left: 504px;
            }

            .btn.btnvalidity {
                display: initial;
                float: left;
                left: 240px;
            }
        }
        @@media(max-width:1080px) {
            .btn.btnforce {
                display: initial;
                float: left;
                left: 301px;
            }

            .btn.btnvalidity {
                display: initial;
                float: left;
                left: 37px;
            }
        }*/

        .btn.btn-primary.btnupdate {
            box-shadow: none !important;
        }

        .card .card-body .download {
            margin-top: 0 !important;
        }

        .modal-dialog .modal-header {
            padding: 8px 24px 0;
            background-color: #4489fc;
        }

            .modal-dialog .modal-header h1 {
                font-size: 16px;
                color: #fff;
                font-weight: 500;
            }

        .loader {
            margin: 0 auto;
            width: 200px;
            height: 150px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .modal-dialog .modal-header .close {
            color: #ffffff;
            background-color: #2d2b2b87;
            font-size: 35px;
            padding-top: 0px;
            height: 34px;
            width: 15px;
            border-radius: 5px;
            padding-right: 27px;
        }

        .ml-auto .btn {
            margin: 0;
        }

        .headtop.row {
            background-color: #e1f2f9;
        }

        .headtop .form-group {
            margin: 5px 0 0;
            padding-bottom: 0;
        }

        .btn-success.btnsearch {
            padding: 8px 14px;
            margin-top: 32px;
        }

        .btn-rose.btnsearch {
            padding: 8px 14px;
        }

        .headbox.row {
            border: 1px solid #ccc;
            margin-top: 12px;
            padding-bottom: 12px;
            padding-top: 10px;
        }

        .headbox p {
            font-size: 12px;
            margin-bottom: 0;
            text-align: center;
            font-weight: bold;
        }

        .btnfetch {
            margin-top: -45px;
            position: absolute;
            right: 14px;
            padding: 8px 18px;
            z-index: 100;
        }
</style>

<div ng-app="MyApp" ng-controller="MyController">

    <div id="overlay" style="display:none;">
        <div class="loadcontainer">
            <div class="spinner"></div>
            <p>Loading Please Wait</p>
        </div>
    </div>



    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 backbtn" style="text-align:right;">
                <a href="/Sales/RaterequestView" type="submit" ng-click="back();" class="btn btn-fill btnback btn-success btn-round btntop">
                    <i class="material-icons">reply</i> Back
                </a>
                @*<a href="/Sales/RaterequestView" type="submit" class="btn btn-fill btnedit btn-warning btn-round btntop">
                        <i class="material-icons">edit</i>
                    </a>*@
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card ">
                    <div class="card-header card-header-primary card-header-text">
                        <div class="card-text">
                            <h4 class="card-title">RR FORM CORRECTION</h4>
                        </div>
                    </div>
                    <div class="card-body" style="border-bottom:1px dashed #ccc;">

                        <div class="row">
                            <div class="col-md-12 download" style="text-align:right;">

                                <span id="hidestatus" style="margin-left: 100px; color: #df1f6c;">VALIDITY : <span style="color:red;" ng-bind="divValidity"></span></span>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-12 download" style="text-align:right;">
                                <span style="color:#21277a; ">
                                    <span>
                                        <input type="checkbox" ng-true-value="1" ng-false-value="0" ng-checked="ChekboxSingal == 1" id="ChekboxSingal" ng-model="ChekboxSingal" value="ChekboxSingal">
                                        <span class="toggle"></span>
                                    </span>  SINGLE USE
                                </span>
                                <span id="hidestatus" style="margin-left: 100px; color: #df1f6c;">STATUS : <span style="color:red;" ng-bind="divStatus"></span></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>RR Number</label>
                                                    <input type="text" readonly id="txtRRNumber" ng-model="txtRRNumber" class="form-control" />
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Date</label>
                                                    <span style='color:red;'>*</span>
                                                    <input type="date" autocomplete="off" id="txtDate" class="form-control" ng-model="txtDate" />
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Valid Till</label>
                                                    <span style='color:red;'>*</span>
                                                    <input type="date" autocomplete="off" [min]="getToday()" id="txtValidTill" ng-model="txtValidTill" class="form-control" />
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Booking Party</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="form-control my-select" id="ddlbookingParty" ng-model="ddlbookingParty" ng-options="item.CustomerName for item in CustomerMasterAllvalues track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Sales Person</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="form-control my-select" id="ddlSalesPerson" ng-model="ddlSalesPerson" ng-options="item.UserName for item in UserNameMasterAllvalues track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Shipment Type</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="form-control my-select" id="ddlShipmentType" ng-model="ddlShipmentType" options="{ allowClear: true }" ng-options="item.GeneralName for item in ShipmentTypeAllvalues track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Place Of Origin</label>
                                                    <select class="form-control my-select" id="ddlPortOfOrg" ng-model="ddlPortOfOrg" options="{ allowClear: true }" ng-options="item.CityName for item in CityAllvalues track by item.ID">
                                                    </select>


                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Port Of Loading</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="form-control my-select" id="ddlPortofLoading" ng-model="ddlPortofLoading" ng-options="item.PortName for item in PortAllvalues track by item.ID"></select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Export Haulage</label>
                                                    <select class="form-control my-select" id="ddlExportHaulage" ng-model="ddlExportHaulage" ng-options="item.GeneralName for item in HaulageTypeAllvalues track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Place Of Discharge</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="form-control my-select" id="ddlPortofDischarge" ng-model="ddlPortofDischarge" ng-options="item.PortName for item in PortAllvalues track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Final POD</label>
                                                    <select class="form-control my-select" id="ddlPortofFinalPOD" ng-model="ddlPortofFinalPOD" ng-options="item.CityName for item in CityAllvalues track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Import Haulage</label>
                                                    <select class="form-control my-select" id="ddlImportHaulage" ng-model="ddlImportHaulage" ng-options="item.GeneralName for item in HaulageTypeAllvalues track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Route Type</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="my-select form-control" id="ddlRoteType" ng-model="ddlRoteType" ng-options="item.name for item in RouteTypeBindValues track by item.ID"></select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Transhipment Port</label> <span style="float:right;"> <a href="#" id="btnTranship">Addition T/S Port</a>  </span>
                                                    <select class="my-select form-control" id="ddlTranshipment" ng-model="ddlTranshipment" ng-options="item.PortName for item in PortAllvalues track by item.ID"></select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Shipper</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="my-select form-control" id="ddlshipper" ng-model="ddlshipper" ng-options="item.CustomerName for item in BookingPartyAllvalues track by item.ID"></select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Export IHC</label>
                                                    <select class="my-select form-control" id="ddlExportIHC" ng-model="ddlExportIHC" ng-options="item.name for item in IHCBindValues track by item.ID"></select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Import IHC</label>
                                                    <select class="my-select form-control" id="ddlImportIHC" ng-model="ddlImportIHC" ng-options="item.name for item in IHCBindValues track by item.ID"></select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Service Type</label>
                                                    <span style='color:red;'>*</span>
                                                    <select class="form-control my-select" id="ddlServiceType" ng-model="ddlServiceType" ng-options="item.ServiceTypesName for item in ServiceTypesValue track by item.ID">
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    </div>


                                </div>


                                <div class="row">
                                    <div class="card-header card-header-primary card-header-text" style="width: 100% !important; margin-top: 14px; margin-bottom: 7px; ">
                                        <div class="card-text" style="background-color: #e6e6e6!important; color: #000!important;background:none!important; box-shadow: none!important; width: 100%!important; padding: 7px 0px; " ortant;">
                                            <h1 class="card-title" style="color: #000; font-weight: 500; background-color: #ededed; padding: 8px; font-size:18px;">Container Details & FreeDays</h1>
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="material-datatables">

                                            <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                <thead>
                                                    <tr>
                                                        <th>SNo</th>

                                                        <th>Container Type</th>
                                                        <th>Commodity</th>
                                                        <th>DG Group</th>
                                                        <th>VGM(Gr.Wt + Tr.Wt)</th>

                                                        <th class="disabled-sorting text-right actwid">Actions</th>
                                                    </tr>
                                                </thead>

                                                <tbody>
                                                    <tr ng-repeat="gRow in DynamicGridContainer">
                                                        <td>{{$index+1}}</td>

                                                        <td>
                                                            <select class="form-control" id="ddlCntrTypes{{$index}}" ng-change="OnChangeCntrTypes(gRow,$index)" ng-model="gRow.CntrTypes" ng-options="item.CntrTypes for item in CntrTypesvalues track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddlCommodityType" ng-change="DDLComdityTypeCheck(gRow)" ng-model="gRow.CommodityTypes" ng-options="item.GeneralName for item in CommodityValue track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddldgClass" ng-disabled="IsValidDGClass" ng-model="gRow.DGClass" ng-options="item.name for item in BindDGClassValues track by item.ID">
                                                            </select>
                                                        </td>

                                                        <td><input type="text" id="txtVGM" autocomplete="off" onkeypress="return numericvalidation();" class="form-control" ng-model="gRow.VGM" /></td>
                                                        <td style="display:none;"><input type="hidden" id="HDRCID" class="form-control" ng-model="gRow.RCID" /></td>

                                                        <td class="td-actions text-right actwid">
                                                            <button type="button" rel="tooltip" ng-if="$last" ng-click="ContainerAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                                <i class="material-icons">add</i>
                                                            </button>
                                                            <button type="button" rel="tooltip" ng-if="!$last" ng-click="ContainerRemove(gRow.RCID,$index)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                                <i class="material-icons">delete</i>
                                                            </button>
                                                        </td>
                                                    </tr>

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>

                                </div>


                                <div class="row">

                                    <div class="col-md-12">
                                        <div class="material-datatables">

                                            <table class="table table-striped table-no-bordered table-hover" cellspacing="0" style="width:50%">

                                                <thead>
                                                    <tr>

                                                        <th>Mode</th>
                                                        <th>Export Freedays</th>
                                                        <th>Import Freedays</th>

                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr ng-repeat="gRow in DynamicGridMode">

                                                        <td>
                                                            <select class="form-control" id="ddlMode" ng-change="ModeFunction(gRow,$index)" ng-model="gRow.Mode" ng-options="item.name for item in BindModeValues track by item.ID"></select>
                                                        </td>
                                                        <td><input type="text" autocomplete="off" onkeypress="return numericvalidation();" class="form-control" ng-model="gRow.ExpFreeDays" /></td>
                                                        <td><input type="text" autocomplete="off" onkeypress="return numericvalidation();" class="form-control" ng-model="gRow.ImpFreeDays" /></td>

                                                    </tr>
                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>



                                <div class="row">
                                    <div class="card-header card-header-primary card-header-text" style="width: 100%!important;">
                                        <div class="card-text" style="background-color: #e6e6e6!important; color: #000!important;background:none!important; box-shadow: none!important; width: 100%!important; padding: 7px 0px; " ortant;">
                                            <h1 class="card-title" style="color: #000; font-weight: 500; background-color: #ededed; padding: 8px; font-size:18px;">Tariff Details</h1>
                                        </div>
                                    </div>

                                    <div class="col-md-12" style="margin-top:0; text-align:right;">
                                        <button type="submit" id="btnFetchTariff" ng-click="OnClickFetchTariffRate(DynamicGridContainer,DynamicGridMode);" class="btn btn-fill btn-danger btnfetch">
                                            Fetch Tariff
                                            <i class="material-icons"></i>
                                        </button>
                                    </div>
                                    <div class="col-md-12">
                                        <hl style="font-weight:bold;">FREIGHT</hl>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="material-datatables">

                                            <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                <thead>
                                                    <tr>
                                                        <th>SNo</th>

                                                        <th>Equip Type</th>
                                                        <th>Charge Description</th>
                                                        <th>Currency</th>
                                                        <th>Payment Mode</th>
                                                        <th>Requested Rate</th>
                                                        <th>Manifest Rate</th>
                                                        <th>Customer Rate</th>
                                                        <th>Rate Different</th>

                                                        <th class="disabled-sorting text-right actwid">Actions</th>
                                                    </tr>
                                                </thead>

                                                <tbody>
                                                    <tr ng-repeat="gRow in DynamicGridFreight">
                                                        <td>{{$index+1}}</td>

                                                        <td>
                                                            <select class="form-control" id="ddlCntrTypes" ng-model="gRow.CntrTypes" ng-options="item.CntrTypes for item in CntrTypesvalues track by item.ID"></select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddlchargeCode" ng-model="gRow.ChargeCodeID" ng-options="item.ChargeCode for item in ChargeCodeAllvalues track by item.ID"></select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddlCurrency" ng-model="gRow.CurrencyID" ng-options="item.Currency for item in CurrencyValue track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control my-select" id="ddlCollectionMode" ng-model="gRow.PaymentModeID" options="{ allowClear: true }" ng-options="item.GeneralName for item in CollectionAllvalues track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td><input type="text" id="txtReqRate" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ReqRate" /></td>
                                                        <td><input type="text" id="txtManifRate" autocomplete="off" ng-change="FreighRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ManifRate" /></td>
                                                        <td><input type="text" id="txtCustomerRate" autocomplete="off" ng-change="FreighRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.CustomerRate" /></td>
                                                        <td><input type="text" id="txtRateDiff" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.RateDiff" /></td>
                                                        <td style="display:none;"><input type="hidden" id="HDRCID" class="form-control" ng-model="gRow.RCID" /></td>

                                                        <td class="td-actions text-right actwid">
                                                            <button type="button" rel="tooltip" ng-if="$last" ng-click="FreightAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                                <i class="material-icons">add</i>
                                                            </button>
                                                            <button type="button" rel="tooltip" ng-if="!$last" ng-click="FreightRemove(DynamicGridFreight,$index, gRow.CID)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                                <i class="material-icons">delete</i>
                                                            </button>
                                                        </td>
                                                    </tr>

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <hl style="font-weight:bold;">TERMINAL HANDLING</hl>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="material-datatables">

                                            <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                <thead>
                                                    <tr>
                                                        <th>SNo</th>

                                                        <th>Equip Type</th>
                                                        <th>Charge Description</th>
                                                        <th>Currency</th>
                                                        <th>Payment Mode</th>
                                                        <th>Requested Rate</th>
                                                        <th>Manifest Rate</th>
                                                        <th>Customer Rate</th>
                                                        <th>Rate Different</th>

                                                        <th class="disabled-sorting text-right actwid">Actions</th>
                                                    </tr>
                                                </thead>

                                                <tbody>
                                                    <tr ng-repeat="gRow in DynamicGridTermainal">
                                                        <td>{{$index+1}}</td>

                                                        <td>
                                                            <select class="form-control" id="ddlCntrTypes" ng-model="gRow.CntrTypes" ng-options="item.CntrTypes for item in CntrTypesvalues track by item.ID"></select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddlchargeCode" ng-model="gRow.ChargeCodeID" ng-options="item.ChargeCode for item in ChargeCodeAllvalues track by item.ID"></select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddlCurrency" ng-model="gRow.CurrencyID" ng-options="item.Currency for item in CurrencyValue track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control my-select" id="ddlCollectionMode" ng-model="gRow.PaymentModeID" options="{ allowClear: true }" ng-options="item.GeneralName for item in CollectionAllvalues track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td><input type="text" id="txtReqRate" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ReqRate" /></td>
                                                        <td><input type="text" id="txtManifRate" autocomplete="off" ng-change="TerminlaRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ManifRate" /></td>
                                                        <td><input type="text" id="txtCustomerRate" autocomplete="off" ng-change="TerminlaRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.CustomerRate" /></td>
                                                        <td><input type="text" id="txtRateDiff" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.RateDiff" /></td>
                                                        <td style="display:none;"><input type="hidden" id="HDRCID" class="form-control" ng-model="gRow.RCID" /></td>

                                                        <td class="td-actions text-right actwid">
                                                            <button type="button" rel="tooltip" ng-if="$last" ng-click="TerminalAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                                <i class="material-icons">add</i>
                                                            </button>
                                                            <button type="button" rel="tooltip" ng-if="!$last" ng-click="TerminalRemove(DynamicGridTermainal,$index, gRow.CID)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                                <i class="material-icons">delete</i>
                                                            </button>
                                                        </td>
                                                    </tr>

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <hl style="font-weight:bold;">HAULAGE</hl>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="material-datatables">

                                            <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                <thead>
                                                    <tr>
                                                        <th>SNo</th>

                                                        <th>Equip Type</th>
                                                        <th>Charge Description</th>
                                                        <th>Currency</th>
                                                        <th>Payment Mode</th>
                                                        <th>Requested Rate</th>
                                                        <th>Manifest Rate</th>
                                                        <th>Customer Rate</th>
                                                        <th>Rate Different</th>

                                                        <th class="disabled-sorting text-right actwid">Actions</th>
                                                    </tr>
                                                </thead>

                                                <tbody>
                                                    <tr ng-repeat="gRow in DynamicGridHaulage">
                                                        <td>{{$index+1}}</td>

                                                        <td>
                                                            <select class="form-control" id="ddlCntrTypes" ng-model="gRow.CntrTypes" ng-options="item.CntrTypes for item in CntrTypesvalues track by item.ID"></select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddlchargeCode" ng-model="gRow.ChargeCodeID" ng-options="item.ChargeCode for item in ChargeCodeAllvalues track by item.ID"></select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control" id="ddlCurrency" ng-model="gRow.CurrencyID" ng-options="item.Currency for item in CurrencyValue track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <select class="form-control my-select" id="ddlCollectionMode" ng-model="gRow.PaymentModeID" options="{ allowClear: true }" ng-options="item.GeneralName for item in CollectionAllvalues track by item.ID">
                                                            </select>
                                                        </td>
                                                        <td><input type="text" id="txtReqRate" autocomplete="off" onkeypress="return numericvalidation();" class="form-control" ng-model="gRow.ReqRate" /></td>
                                                        <td><input type="text" id="txtManifRate" autocomplete="off" ng-change="HaulageRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control" ng-model="gRow.ManifRate" /></td>
                                                        <td><input type="text" id="txtCustomerRate" autocomplete="off" ng-change="HaulageRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control" ng-model="gRow.CustomerRate" /></td>
                                                        <td><input type="text" id="txtRateDiff" autocomplete="off" onkeypress="return numericvalidation();" class="form-control" ng-model="gRow.RateDiff" /></td>
                                                        <td style="display:none;"><input type="hidden" id="HDRCID" class="form-control" ng-model="gRow.RCID" /></td>

                                                        <td class="td-actions text-right actwid">
                                                            <button type="button" rel="tooltip" ng-if="$last" ng-click="HaulageAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                                <i class="material-icons">add</i>
                                                            </button>
                                                            <button type="button" rel="tooltip" ng-if="!$last" ng-click="HaulageRemove(DynamicGridHaulage,$index,gRow.CID)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                                <i class="material-icons">delete</i>
                                                            </button>
                                                        </td>
                                                    </tr>

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="card-header card-header-primary card-header-text" style="width: 100%!important;">
                                        <div class="card-text" style="background-color: #e6e6e6!important; color: #000!important;background:none!important; box-shadow: none!important; width: 100%!important; padding: 7px 0px; " ortant;">
                                            <h1 class="card-title" style="color: #000; font-weight: 500; background-color: #ededed; padding: 8px; font-size:18px;">Local Charges</h1>
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="material-datatables">

                                            <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">


                                                <tbody>
                                                    <tr style="background-color:#fff;">

                                                        <td style="text-align:center;"><button type="submit" class="btn btn-fill" style="width:119px;">Origin</button> </td>
                                                        <td>POL-LOCAL  CHARGES:   <span ng-bind="LocalChargeImpAmt"></span> :<span ng-bind="LocalChargeImpCurrency"></span></td>
                                                        <td style="text-align:center;"><button type="submit" class="btn btn-round btn-warning" id="btnLocalImportCharge">View</button></td>

                                                    </tr>
                                                    <tr>

                                                        <td style="text-align:center;"><button type="submit" class="btn btn-fill">Destination</button> </td>
                                                        <td>POD-LOCAL  CHARGES <span ng-bind="LocalChargeExpAmt"></span> :<span ng-bind="LocalChargeExpCurrency"></span></td>
                                                        <td style="text-align:center;"><button type="submit" class="btn btn-round btn-warning" id="btnLocalExportCharge">View</button></td>

                                                    </tr>

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Special Instruction-slot Details& Services</label>
                                                <textarea id="txtRemark" ng-model="txtRemark" class="form-control" rows="5"></textarea>
                                            </div>
                                            <div class="col-md-6">
                                                <label>Other Remarks</label>
                                                <textarea id="txtOtherRemark" ng-model="txtOtherRemark" class="form-control" rows="5"></textarea>
                                            </div>


                                        </div>
                                    </div>


                                </div>

                             

                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <input type="checkbox" id="SlotFiledbyPrinclpal" ng-true-value="1" ng-change="SlotFiledbyPrinclpalCheck(SlotFiledbyPrinclpal);" ng-checked="SlotFiledbyPrinclpal == 1" ng-false-value="0" ng-model="SlotFiledbyPrinclpal" />
                                            <span style="color:red"> Slot filed by Principal</span>

                                        </div>
                                    </div>

                                    <div class="material-datatables">

                                        <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                            <thead>
                                                <tr>
                                                    <td></td>
                                                    <th>Slot Operator</th>
                                                    <th>Slot Terms</th>
                                                    <th>Slot 20</th>
                                                    <th>Slot 40</th>


                                                    <th class="disabled-sorting text-right actwid">Actions</th>
                                                    <th class="disabled-sorting text-right actwid">Delete</th>
                                                </tr>
                                            </thead>

                                            <tbody>
                                                <tr>
                                                    <td></td>
                                                    <td>
                                                        <input type="hidden" id="HDIDv" class="form-control" ng-model="TID" />
                                                        <input type="hidden" id="HDArrayIndex" class="form-control" ng-model="HDArrayIndex" />
                                                        <select class="form-control my-select" ng-disabled="SlotbyPrincipal" id="ddlSlotOperatorID" ng-model="gRow.SlotOperatorID" ng-options="item.CustomerName for item in SlotOperatorAllvalues track by item.ID"></select>
                                                    </td>

                                                    <td>
                                                        <select class="form-control" id="ddlSlotTerm" ng-model="ddlSlotTerm" ng-options="item.SlotTerm for item in SlotTermsValue track by item.ID">
                                                        </select>
                                                        <input id="HDSlotPrincible" type="hidden" ng-model="HDSlotPrincible" />
                                                    </td>
                                                    <td><input type="text" id="SlotAmt20" ng-model="SlotAmt20" value="0.00" ng-disabled="SlotbyPrincipal" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" /></td>
                                                    <td><input type="text" id="SlotAmt40" ng-model="SlotAmt40" value="0.00" ng-disabled="SlotbyPrincipal" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" /></td>
                                                    <td class="td-actions text-right actwid">
                                                        <button type="button" rel="tooltip" ng-click="DynamicSlotAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                            <i class="material-icons">add</i>
                                                        </button>
                                                    </td>
                                                    <td></td>
                                                </tr>

                                                <tr ng-repeat="gRow in DynamicGridSlotAmount">
                                                    <td>{{$index+1}}</td>
                                                    <td>{{gRow.SlotOperator}}</td>
                                                    <td>{{gRow.SlotTerms}}</td>
                                                    <td>{{gRow.SlotAmt20}}</td>
                                                    <td>{{gRow.SlotAmt40}}</td>

                                                    <td class="td-actions text-right actwid">

                                                        <button type="button" rel="tooltip" ng-click="Selectvalues(DynamicGridSlotAmount,$index)" class="btn btn-success btn-round" data-original-title="" title="">
                                                            <i class="material-icons">edit</i>
                                                        </button>

                                                    </td>
                                                    <td>
                                                        <button type="button" id="btnSlotDelete" rel="tooltip" ng-click="DynamicSlotRemove(DynamicGridSlotAmount,$index,gRow.SID)" class="btn btn-danger btn-round">
                                                            <i class="material-icons">delete</i>
                                                        </button>
                                                    </td>
                                                </tr>

                                            </tbody>
                                        </table>

                                    </div>


                                </div>

                                <div class="row">
                                    <div class="col-md-4">
                                        <label>FileName</label>
                                        <input type="text" ng-model="txtFileName" id="txtFileName" class="form-control" />
                                    </div>
                                    <div class="col-md-4">

                                        <div class="input-group" style="margin-top:15px;">
                                            <span class="input-group-addon"><a href="#" class="btn btn-rose btn-fill btn-round">Add Attachment</a></span>
                                            <input class="btn btn-primary" type="file" style='position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"; opacity:0;background-color:transparent;color:transparent;' name="file_source" size="40" ngf-select="UploadFiles($files)" onchange='$("#upload-file-info").html($(this).val());'>

                                            <span class='label label-info' id="upload-file-info"></span>
                                        </div>


                                    </div>
                                    @*<div class="col-md-3">
                                            <label ng-repeat="gRow in DocumentsDownload">Download File</label>
                                            <a href="#" ng-click="DownloadFile(gRow.DocumentAttached);" ng-bind="lblAttachment"><label style="cursor:pointer"></label></a>

                                        </div>*@

                                    <div class="col-md-4" id="viewattachment">
                                        <div class="material-datatables">

                                            <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                <thead>
                                                    <tr>
                                                        <th>FileName</th>

                                                    </tr>
                                                </thead>

                                                <tbody>
                                                    <tr ng-repeat="gRow in DocumentsDownload">
                                                        @*<td>{{$index+1}}</td>*@

                                                        <td>
                                                            <a href="#" ng-click="DownloadFile(gRow.DocumentAttached);" style="text-decoration:underline;">{{gRow.DocumentAttached}}</a>
                                                        </td>


                                                    </tr>

                                                </tbody>
                                            </table>

                                        </div>



                                    </div>
                                </div>


                            </div>
                        </div>

                        <!-- Modal -->
                        <div class="modal fade" id="demoModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                            <div class="modal-dialog" style="width:1020px;">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-12" style="text-align:center;">
                                                <div class="card-header card-header-primary card-header-text" style=" margin-bottom: 20px;">
                                                    <div class="card-text">
                                                        <h1 class="card-title">ORIGIN CHARGES</h1>
                                                    </div>
                                                </div>

                                                <div class="col-md-12">
                                                    <div class="material-datatables">

                                                        <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                            <thead>
                                                                <tr>
                                                                    <th>SNo</th>

                                                                    <th>Equip Type</th>
                                                                    <th>Charge Description</th>
                                                                    <th>Currency</th>
                                                                    <th>Payment Mode</th>
                                                                    <th>Requested Rate</th>
                                                                    <th>Manifest Rate</th>
                                                                    <th>Customer Rate</th>
                                                                    <th>Rate Different</th>

                                                                    <th class="disabled-sorting text-right actwid">Actions</th>
                                                                </tr>
                                                            </thead>

                                                            <tbody>
                                                                <tr ng-repeat="gRow in DynamicGridLocalImport">
                                                                    <td>{{$index+1}}</td>

                                                                    <td>
                                                                        <select class="form-control" id="ddlCntrTypes" ng-model="gRow.CntrTypes" ng-options="item.CntrTypes for item in CntrTypesvalues track by item.ID"></select>
                                                                    </td>
                                                                    <td>
                                                                        <select class="form-control" id="ddlchargeCode" ng-model="gRow.ChargeCodeID" ng-options="item.ChargeCode for item in ChargeCodeAllvalues track by item.ID"></select>
                                                                    </td>
                                                                    <td>
                                                                        <select class="form-control" id="ddlCurrency" ng-model="gRow.CurrencyID" ng-options="item.Currency for item in CurrencyValue track by item.ID">
                                                                        </select>
                                                                    </td>
                                                                    <td>
                                                                        <select class="form-control my-select" id="ddlCollectionMode" ng-model="gRow.PaymentModeID" options="{ allowClear: true }" ng-options="item.GeneralName for item in CollectionAllvalues track by item.ID">
                                                                        </select>
                                                                    </td>
                                                                    <td><input type="text" id="txtReqRate" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ReqRate" /></td>
                                                                    <td><input type="text" id="txtManifRate" autocomplete="off" ng-change="FreighLocImpRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ManifRate" /></td>
                                                                    <td><input type="text" id="txtCustomerRate" ng-change="FreighLocImpRateCalculation(gRow);" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.CustomerRate" /></td>
                                                                    <td><input type="text" id="txtRateDiff" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.RateDiff" /></td>
                                                                    <td style="display:none;"><input type="hidden" id="HDRCID" class="form-control" ng-model="gRow.RCID" /></td>

                                                                    <td class="td-actions text-right actwid">
                                                                        <button type="button" rel="tooltip" ng-if="$last" ng-click="FreightLocalImpAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                                            <i class="material-icons">add</i>
                                                                        </button>
                                                                        <button type="button" rel="tooltip" ng-if="!$last" ng-click="FreightLocalImpRemove(DynamicGridLocalImport,$index, gRow.CID)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                                            <i class="material-icons">delete</i>
                                                                        </button>
                                                                    </td>
                                                                </tr>

                                                            </tbody>
                                                        </table>

                                                    </div>



                                                </div>

                                                <div class="col-md-12">

                                                    <button type="submit" id="btnFreightImportCharge" ng-click="btnFreightImportChargeCalculation(DynamicGridLocalImport);" class="btn btn-fill btn-primary btnupdate btntop">
                                                        <i class="material-icons"></i>
                                                        Update
                                                    </button>

                                                </div>
                                            </div>



                                        </div>
                                    </div>




                                </div>
                            </div>
                        </div>


                        <div class="modal fade" id="demoModalExport" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                            <div class="modal-dialog" style="width:1020px;">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-12" style="text-align:center;">
                                                <div class="card-header card-header-primary card-header-text" style=" margin-bottom: 20px;">
                                                    <div class="card-text">
                                                        <h1 class="card-title">DESTINATION LOCAL CHARGES</h1>
                                                    </div>
                                                </div>

                                                <div class="col-md-12">
                                                    <div class="material-datatables">

                                                        <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                            <thead>
                                                                <tr>
                                                                    <th>SNo</th>

                                                                    <th>Equip Type</th>
                                                                    <th>Charge Description</th>
                                                                    <th>Currency</th>
                                                                    <th>Payment Mode</th>
                                                                    <th>Requested Rate</th>
                                                                    <th>Manifest Rate</th>
                                                                    <th>Customer Rate</th>
                                                                    <th>Rate Different</th>

                                                                    <th class="disabled-sorting text-right actwid">Actions</th>
                                                                </tr>
                                                            </thead>

                                                            <tbody>
                                                                <tr ng-repeat="gRow in DynamicGridLocalExport">
                                                                    <td>{{$index+1}}</td>

                                                                    <td>
                                                                        <select class="form-control" id="ddlCntrTypes" ng-model="gRow.CntrTypes" ng-options="item.CntrTypes for item in CntrTypesvalues track by item.ID"></select>
                                                                    </td>
                                                                    <td>
                                                                        <select class="form-control" id="ddlchargeCode" ng-model="gRow.ChargeCodeID" ng-options="item.ChargeCode for item in ChargeCodeAllvalues track by item.ID"></select>
                                                                    </td>
                                                                    <td>
                                                                        <select class="form-control" id="ddlCurrency" ng-model="gRow.CurrencyID" ng-options="item.Currency for item in CurrencyValue track by item.ID">
                                                                        </select>
                                                                    </td>
                                                                    <td>
                                                                        <select class="form-control my-select" id="ddlCollectionMode" ng-model="gRow.PaymentModeID" options="{ allowClear: true }" ng-options="item.GeneralName for item in CollectionAllvalues track by item.ID">
                                                                        </select>
                                                                    </td>
                                                                    <td><input type="text" id="txtReqRate" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ReqRate" /></td>
                                                                    <td><input type="text" id="txtManifRate" autocomplete="off" ng-change="FreighLocExpRateCalculation(gRow);" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.ManifRate" /></td>
                                                                    <td><input type="text" id="txtCustomerRate" ng-change="FreighLocExpRateCalculation(gRow);" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.CustomerRate" /></td>
                                                                    <td><input type="text" id="txtRateDiff" autocomplete="off" onkeypress="return numericvalidation();" class="form-control amtrgt" ng-model="gRow.RateDiff" /></td>
                                                                    <td style="display:none;"><input type="hidden" id="HDRCID" class="form-control" ng-model="gRow.RCID" /></td>

                                                                    <td class="td-actions text-right actwid">
                                                                        <button type="button" rel="tooltip" ng-if="$last" ng-click="FreightLocExpAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                                            <i class="material-icons">add</i>
                                                                        </button>
                                                                        <button type="button" rel="tooltip" ng-if="!$last" ng-click="FreightLocExpRemove(DynamicGridLocalExport,$index,gRow.CID)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                                            <i class="material-icons">delete</i>
                                                                        </button>
                                                                    </td>
                                                                </tr>

                                                            </tbody>
                                                        </table>

                                                    </div>
                                                </div>

                                                <div class="col-md-12">

                                                    <button type="submit" id="btnFreightExportChargeCalculation" ng-click="btnFreightExportChargeCalculation(DynamicGridLocalExport);" class="btn btn-fill btn-primary btnupdate btntop">
                                                        <i class="material-icons"></i>
                                                        Update
                                                    </button>

                                                </div>
                                            </div>
                                        </div>
                                    </div>




                                </div>
                            </div>
                        </div>



                        <div class="modal fade" id="demoModalTranshipment" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                            <div class="modal-dialog" style="width:800px;">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-12" style="text-align:center;">
                                                <div class="card-header card-header-primary card-header-text">
                                                    <div class="card-text">
                                                        <h1 class="card-title">Additional T/S Port</h1>
                                                    </div>
                                                </div>

                                                <div class="col-md-12">
                                                    <div class="material-datatables">

                                                        <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="40%" style="width:40%">
                                                            <thead>
                                                                <tr>
                                                                    <th>SNo</th>

                                                                    <th>T/S Port</th>


                                                                    <th class="disabled-sorting text-right actwid">Actions</th>
                                                                </tr>
                                                            </thead>

                                                            <tbody>
                                                                <tr ng-repeat="gRow in DynamicGridTsPort">
                                                                    <td>{{$index+1}}</td>

                                                                    <td>
                                                                        <select class="form-control" id="ddlTranshipmentPort" ng-model="gRow.PortID" ng-options="item.PortName for item in PortAllvalues track by item.ID"></select>
                                                                    </td>

                                                                    <td class="td-actions text-right actwid">
                                                                        <button type="button" rel="tooltip" ng-if="$last" ng-click="AdditionTSPortAdd(gRow)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                                            <i class="material-icons">add</i>
                                                                        </button>
                                                                        <button type="button" rel="tooltip" ng-if="!$last" ng-click="AdditionTSPortAddRemove(DynamicGridFreight,$index,gRow.CID)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                                            <i class="material-icons">delete</i>
                                                                        </button>
                                                                    </td>
                                                                </tr>

                                                            </tbody>
                                                        </table>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>




                                </div>
                            </div>
                        </div>

                        <div class="modal fade" id="demoModalValidate" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                            <div class="modal-dialog" style="width:400px;">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1>VALIDITY EXTENSION</h1>
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="col-md-2"><label style="font-size:15px!important;">Date</label></div>
                                                        <div class="col-md-1">:</div>
                                                        <div class="col-md-9"><input type="date" ng-model="txtExtDat" id="txtExtDat" class="form-control" /></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12" style="text-align: center; margin-top: 12px;">
                                                <button class="btn btn-default" style="width: 40%; background-color: transparent; color: #000; border: 1px solid #9d9b9b;">Cancel</button>
                                                <button class="btn btn-warning" style="width:40%;" ng-click="NewRatesheetCreation(DynamicGridContainer,DynamicGridFreight,DynamicGridTermainal,DynamicGridHaulage,DynamicGridLocalImport,DynamicGridLocalExport,DynamicGridTsPort,DynamicGridMode);">SUBMIT NEW RR</button>
                                            </div>
                                        </div>
                                    </div>




                                </div>
                            </div>
                        </div>

                        <div class="modal fade" id="demoModalHistory" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                            <div class="modal-dialog" style="width:1020px;">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-12" style="text-align:center;">
                                                <div class="card-header card-header-primary card-header-text" style=" margin-bottom: 20px;">
                                                    <div class="card-text">
                                                        <h1 class="card-title">RATE REQUEST - HISTORY</h1>
                                                    </div>
                                                </div>

                                                <div class="col-md-12">
                                                    <div class="material-datatables">

                                                        <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                            <thead>
                                                                <tr>
                                                                    <th>SNo</th>
                                                                    <th>Rate Request No</th>
                                                                    <th>Valid From</th>
                                                                    <th>Valid Till</th>
                                                                    <th>Status</th>
                                                                </tr>
                                                            </thead>

                                                            <tbody>
                                                                <tr>
                                                                    <td>1</td>
                                                                    <td>RRN4553</td>
                                                                    <td>10/1/2021</td>
                                                                    <td>10/1/2021</td>
                                                                    <td>ACTIVE</td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            @*<div class="col-md-12" style="text-align:right;">
                                <button type="submit" id="btnForceExpire" ng-click="btnForceExpire();" class="btn btn-fill btn-rose btntop btnforce">
                                    <i class="material-icons"></i>
                                    Force Expire
                                </button>

                                <button type="submit" id="btnValidity" ng-click="btnValidityExisting();" class="btn btn-fill btn-danger btntop btnvalidity">
                                    <i class="material-icons"></i>
                                    Validity Extension
                                </button>*@


                                <button type="submit" id="btnPrint" name="btnprint" ng-click="btnPrint();" value="PDF" class="btn btn-fill btn-default btntop">
                                    <i class="material-icons">print</i>
                                    Print
                                </button>

                                <button type="submit" ng-click="RecordSave(DynamicGridContainer,DynamicGridFreight,DynamicGridTermainal,DynamicGridHaulage,DynamicGridLocalImport,DynamicGridLocalExport,DynamicGridTsPort,DynamicGridMode,DynamicGridSlotAmount);" id="btnSubmit" class="btn btn-fill btn-primary btntop">
                                    <i class="material-icons">done</i>
                                    Submit
                                </button>
                                <input type="hidden" id="RegId" ng-model="RegId" />

                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>


    </div>

<script>
    $(document).ready(function () {
        $('.datepicker').datetimepicker({
            format: 'DD/MM/YYYY',

        });
    });
</script>


