@model  NVOCShipping.Models.MasterModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.9/angular.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/danialfarid-angular-file-upload/12.2.13/ng-file-upload.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js"></script>
<style>

    .table > tbody > tr > td {
        white-space: nowrap;
    }

    .exceldownload .fa-file-excel-o {
        color: #4caf50;
        font-weight: 400;
        font-size: 20px;
    }

    .exceldownload a {
        color: #000;
    }
</style>

<script type="text/javascript">

    LayoutApp.controller('MyController', function ($scope, $http, $timeout) {

        $scope.HideError = true;

        $scope.BindExcelRecords = function () {

            var BussData = {}
            BussData.AgencyID = localStorage.getItem("AgencyID");

            $http({
                method: 'POST',
                url: "/api/MovementUploadApi/MovementUploadView",
                data: JSON.stringify(BussData),

            }).then(function (result) {

                $scope.MovementUploadRec = result.data;


                $scope.totalItems = $scope.MovementUploadRec.length;
                $scope.currentPage = 1;
                $scope.numPerPage = 8;
                $scope.paginate = function (value) {
                    var begin, end, index;
                    begin = ($scope.currentPage - 1) * $scope.numPerPage;
                    end = begin + $scope.numPerPage;
                    index = $scope.MovementUploadRec.indexOf(value);
                    return (begin <= index && index < end);
                };
            });
           

        };
        $scope.BindExcelRecords();

        $scope.ExcelLogView = function (url) {

            var url = "/Container/CntrMovementUpload?CID=" + encodeURIComponent(url);
            window.location.href = url;
        }

       

        $scope.FileUploadingWindows = function () {
            var UserID = localStorage.getItem("UserID");
            var left = (screen.width / 2) - (600 / 2);
            var top = (screen.height / 2) - (500 / 2);
            return window.open("../CntrMovementUpload.aspx?UserID=" + UserID, 'window', 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=400, height=300, top=' + top + ', left=' + left);
        }


        $scope.btnuploadExcel = function () {
            //$scope.fillRepoErrorList = "";
            //$scope.HideError = true;
            $('#btnuploadExcelShow').modal('show');
        }

        $scope.SelectFile = function (file) {
            $scope.SelectedFile = file;
        };
        $scope.Upload = function () {

            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;

            /* if (regex.test($scope.SelectedFile.name.toLowerCase())) {*/
            if (typeof (FileReader) != "undefined") {
                var reader = new FileReader();
                //For Browsers other than IE.
                if (reader.readAsBinaryString) {
                    reader.onload = function (e) {
                        $scope.ProcessExcel(e.target.result);
                    };
                    reader.readAsBinaryString($scope.SelectedFile);
                } else {
                    //For IE Browser.
                    reader.onload = function (e) {
                        var data = "";
                        var bytes = new Uint8Array(e.target.result);
                        for (var i = 0; i < bytes.byteLength; i++) {
                            data += String.fromCharCode(bytes[i]);
                        }
                        $scope.ProcessExcel(data);
                    };
                    reader.readAsArrayBuffer($scope.SelectedFile);
                }
            } else {
                ShowPopup("This browser does not support HTML5.");
            }
            //} else {
            //    ShowPopup("Please upload a valid Excel file.");
            //}
        };

        $scope.ProcessExcel = function (data) {

            //Read the Excel File data.
            var workbook = XLSX.read(data, {
                type: 'binary'
            });

            //Fetch the name of First Sheet.
            var firstSheet = workbook.SheetNames[0];

            //Read all rows from First Sheet into an JSON array.
            var dataEx = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);
            //this.dsExcel = (XLSX.utils.sheet_to_json(ws, { header: 1 }));
            //let dataarray = this.dsExcel.slice(1);
            console.log(dataEx);

            var Itemsv = [];
            var Itemsv1 = [];
            angular.forEach(dataEx, function (value, key) {
                var BLNUMBERv = "";
             
                if (typeof dataEx[key].BLNUMBER == "undefined") {
                    BLNUMBERv = "."
                }
                else {
                    BLNUMBERv = dataEx[key].BLNUMBER
                }
               
            
               // alert(BLNUMBERv);
                Itemsv.push('Insert:' + dataEx[key].CNTRNO, dataEx[key].STATUSCODE, dataEx[key].LOCATION, dataEx[key].MOVEMENTDATE, dataEx[key].VESSEL_VOYAGE,
                    dataEx[key].TRANSITMODE, dataEx[key].DEPOT, dataEx[key].AGENCY, dataEx[key].CUSTOMER, BLNUMBERv)
            });

            angular.forEach(dataEx, function (value, key) {
                Itemsv1.push(dataEx[key].CNTRNO)
            });

            var Datavalue = {};
            Datavalue.ItemsCntr = Itemsv.toString();
            Datavalue.ItemsCntr1 = Itemsv1.toString();
            Datavalue.UserID = localStorage.getItem("UserID");
            Datavalue.SessionFinYear = localStorage.getItem("SessionFinYear");
            Datavalue.AgencyID = localStorage.getItem("AgencyID");
            Datavalue.ReferenceNo = "";
            $http({
                method: 'POST',
                url: '/api/MovementUploadApi/MovementExcelUpload',
                data: JSON.stringify(Datavalue),

            }).then(function (result) {

                $timeout(function () {
                    var err = "";
                    if (result.data.length > 0) {
                        console.log(result.data);
                        if (result.data[0].AlertMessageID == "2") {
                            $('#btnuploadExcelShow').modal('show');
                            $scope.fillRepoErrorList = result.data;
                            $scope.HideError = false;

                            //for (let item of result.data) {
                              
                            //        $scope.fillRepoErrorList.push({
                            //            'AlertMessage': item.AlertMessage,
                            //        })
                              
                            //    err = item.AlertMessage;
                            //}

                            //if (err != null) {
                            //    $scope.fillRepoErrorList = err;
                            //}
                        }
                        if (result.data[0].AlertMessageID == "1") {
                            ShowPopup("Movement-Uploaded Successfully")
                            $('#btnuploadExcelShow').modal('hide');
                            $scope.HideError = true;
                            $scope.BindExcelRecords();
                        }
                       
                        if (result.data[0].AlertMessageID == "3") {
                            ShowPopup("Error,Contact Admin")
                            $('#btnuploadExcelShow').modal('hide');
                            $scope.HideError = true;
                        }
                    }
                    $("#overlay").hide();
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });

        };
    });

    function ShowPopup(message) {
        swal(message);
    };

</script>


<div ng-app="MyApp" ng-controller="MyController">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 backbtn" style="text-align:right;">
                @*<button type="submit" ng-click="AddNew();" class="btn btn-fill btn-success btn-round btntop">
                        <i class="material-icons">reply</i> Back

                    </button>*@

            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card ">
                    <div class="card-header card-header-primary card-header-text">
                        <div class="card-text">
                            <h4 class="card-title">Excel Container Movement</h4>
                        </div>
                    </div>
                    <div class="card-body ">
                        <div class="col-md-12" style="text-align:right">

                            <button type="button" id="btnuploadExcel" rel="tooltip" ng-click="btnuploadExcel();" class="btn btn-primary btn-round" data-original-title="" title="" style="margin-right: 30px;">
                                <i class="material-icons">upload</i>
                                Upload
                            </button>
                            <a style="color: forestgreen; text-align: right;" href="~/DownloadFile/ContainerMovement_Upload_Template.xlsx">Template</a>
                        </div>

                        <div class="card-body">
                            <div class="toolbar">

                            </div>
                            <div class="material-datatables">

                                <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>S.No</th>
                                            <th>Reference No</th>
                                            <th>Agency</th>
                                            <th>Uploaded By</th>
                                            <th>Uploaded On</th>
                                            <th class="disabled-sorting text-right">Actions</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        <tr ng-repeat="i in MovementUploadRec | filter : paginate | orderBy:'-Statusv'">
                                            <td>{{numPerPage *(currentPage-1)+$index+1}}</td>
                                            <td>{{i.ReferenceNo}}</td>
                                            <td>{{i.Agency}}</td>
                                            <td>{{i.UploadedBy}}</td>
                                            <td>{{i.UploadedOn}}</td>


                                            <td class="td-actions text-right">

                                                <button type="button" rel="tooltip" class="btn btn-success btn-round" data-original-title="" title="" ng-click="ExcelLogView(i.ID)">

                                                    <i class="material-icons">edit</i>
                                                </button>

                                            </td>
                                        </tr>

                                    </tbody>
                                </table>
                                <div id="notFoundDiv" ng-show="(LeaseRec|filter:CntrNo).length==0" style="color: red; font-weight: bold">No Records Found</div>
                            </div>
                        </div>

                    </div>

                    <div class="card-footer">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-5">
                                    <p>Showing <span style="padding-left:5px; padding-right:3px;">1</span>to<span style="padding-left:3px; padding-right:3px;">10</span>of<span style="padding-left:3px; padding-right:3px;">40</span>entries</p>
                                </div>
                                <div class="col-md-7" style="text-align:right;">
                                    <pagination total-items="totalItems" ng-model="currentPage"
                                                max-size="10" boundary-links="true" items-per-page="numPerPage" class="pagination-sm">
                                    </pagination>
                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="modal fade" id="btnuploadExcelShow" style="margin:0 auto;" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

                        <div class="modal-dialog" style="width:700px !important">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                    <h4 class="modal-title" style="color:red" id="myModalLabel">Container Uploading</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="card ">

                                                <div class="input-group" style="margin-top:15px;">

                                                    <input type="file" ngf-select="SelectFile($file)" />
                                                    <input type="button" class="btn btn-primary" value="Upload" ng-click="Upload()" />
                                                </div>
                                            </div>

                                        </div>



                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="material-datatables" ng-hide="HideError">

                                                <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                                    <thead>
                                                        <tr role="row">
                                                            <th class="actwid">
                                                                S.No
                                                            </th>
                                                            <th>
                                                                Error Description
                                                            </th>

                                                        </tr>
                                                    </thead>

                                                    <tbody>
                                                        <tr ng-repeat="gRow in fillRepoErrorList">
                                                            <td>{{$index+1}}</td>
                                                            <td>{{gRow.AlertMessage}}</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('.my-select').select2({
            placeholder: "--Select--",
            allowClear: true,
            width: '100%'
        });
    });

</script>
