@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>

<style>

    ul.autocomplete-content.dropdown-content {
        background-color: #eee;
        box-shadow: 0px 0px 5px #ccc;
        top: 30px !important;
        left: 15px !important;
        position: absolute !important;
        z-index: 100;
    }

        ul.autocomplete-content.dropdown-content li {
            list-style-type: none;
            margin-left: -40px;
            padding-left: 10px;
            padding-top: 8px;
            font-size: 14px;
            color: #040f96 !important;
            border-bottom: 1px solid #ccc;
        }

            ul.autocomplete-content.dropdown-content li:hover {
                background-color: #f4f4f4;
            }

    .section-search input {
        padding: 5px !important;
        font-size: 18px !important;
        width: 90% !important;
        border: #f4f4f4 3px solid !important;
        background-color: #808080 !important;
        float: right;
    }

    .section-search i {
        display: block;
    }

    .section-search input.autocomplete {
        color: #040f96;
    }

    .input-field .prefix.active {
        color: #040f96 !important;
    }

    .dropdown-content li > a, .dropdown-content li > span {
        color: #040f96 !important;
    }

    .autocomplete-content li .highlight {
        color: #040f96 !important;
    }

    .bootstrap-select .btn.dropdown-toggle.select-with-transition {
        background-image: none;
        border: 1px solid #ccc !important;
        margin-top: 0;
        height: 32px;
    }

    .bootstrap-select .dropdown-toggle .filter-option {
        padding-top: 9px;
        padding-left: 4px;
        padding-right: 0px;
    }
    /*.dropdown-toggle:after
    {
        margin-left: 8.255em!important;
    }*/

    .bootstrap-select:not([class*=col-]):not([class*=form-control]):not(.input-group-btn) {
        max-width: 100%;
    }
    /*.form-control.txtarea
    {
        width:765px;
    }*/
    .bmd-form-group .form-control, .bmd-form-group input::placeholder, .bmd-form-group label {
        padding-left: 6px;
    }
</style>
<script type="text/javascript">

    LayoutApp.controller('MyController', function ($scope, $http, $timeout) {
        $('#overlay').fadeIn().delay(300).fadeOut();
        $scope.HDArrayIndex = "";

        $scope.DropdownshowHid = false

        $scope.PortAllvalues = null;
        $scope.fillPortsValues = function () {
            $http({
                method: 'POST',
                url: '/api/CommonAccessApi/PortValues/',
                data: {}
            }).then(function (result) {
                $timeout(function () {
                    $scope.PortAllvalues = result.data;

                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }
                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                ShowPopup('There has been an error: ' + result);
            });
        };
        $scope.fillPortsValues();

        $(document).ready(function () {

            var queryString = new Array();
            if (window.location.search.split('?').length > 1) {
                var secret_key = CryptoJS.enc.Utf8.parse(localStorage.getItem("SessionKey"));
                var iv = CryptoJS.enc.Utf8.parse(localStorage.getItem("Sessioniv"));
                var bytes = CryptoJS.AES.decrypt(window.location.search.split('?')[1].toString(), secret_key, {
                    iv: iv,
                    mode: CryptoJS.mode.CBC,
                    padding: CryptoJS.pad.Pkcs7
                });

                var params = bytes.toString(CryptoJS.enc.Utf8).split('&');
                //alert(params);
                for (var i = 0; i < params.length; i++) {
                    var key = params[i].split('=')[0];
                    var value = decodeURIComponent(params[i].split('=')[1]);
                    queryString[key] = value;

                }
            }
            if (queryString["NotesID"] != null) {
                $scope.HDRegId = queryString["NotesID"].toString();
                $scope.BindNotesandClauses(queryString["NotesID"].toString());
                $scope.BindDocType(queryString["NotesID"].toString());
            }
        });




        $(document).ready(function () {
            $('.my-select').select2({
                placeholder: "--Select--",
                allowClear: true,
                width: '100%'
            });

        });
        $scope.DynamicGrid = [{ NID: "", Notes: "", PortID:""}];

       

        $scope.Add = function (gRow, index) {
            $scope.DynamicGrid.push({
                'NID': "",
                'Notes': "",
                'PortID': ""
                
            });
            

        }

        $scope.RecordSave = function (data) {
            var validation = "";

            var Notesv = "";
            var PortIDv = 0;
  
            angular.forEach(data, function (value, key) {
                
                Notesv = data[key].Notes
            });

            if (typeof Notesv == "undefined") {
                validation += "<span style='color:red;'>*</span> <span>Please Enter Notes</span></br> "
            }

            if (validation != "") {
                ShowPopup(validation);
                return false;
            }
            var BussData = {}
            var Items = []
            BussData.DocID = $scope.HDRegId;
           
            angular.forEach(data, function (value, key) {
                var intNID = data[key].NID;
                var PortIDv = 0;
                if (typeof data[key].NID == "undefined") {
                    intNID = 0;
                }
                if (typeof data[key].PortID.ID == 'undefined')
                    PortIDv = 0;
                else
                    PortIDv = data[key].PortID.ID;

                Items.push('Insert:' + intNID, PortIDv,data[key].Notes);

            });
           

            BussData.Itemsv = Items.toString();

            $http({
                method: 'POST',
                url: "/api/Home/NotesandClausesInsert",
                data: JSON.stringify(BussData),
            }).then(function (result) {

                $timeout(function () {
                    //$scope.HDRegId = result.data[0].ID;
                    if (result.data.length > 0) {
                        ShowPopup("Record Saved Successfully");
                    }
                    else {
                        $('#overlay').hide();
                        ShowPopup("Error,Not Saved");
                    }
                    setTimeout(function () { location.href = "/Home/NotesandClausesView" }, 1000);
                  
                });
            }, function (result) {
                if (result.status == 500) {
                    ShowPopup("Sorry no internet connectivity Application Error.");
                }
                else if (result.status == 404) {
                    ShowPopup("Sorry no internet connectivity page not found.");
                }


                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    // $(".modal").hide();
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            }).catch(function (result) {
                // This is set in the event of an error.
                console.log(result);
                ShowPopup('There has been an error: ' + result);
            });

        }

        $scope.BindNotesandClauses = function (NotesID) {

            var BussData = {}
            BussData.DocID = NotesID;

            $http({
                method: 'POST',
                url: "/api/Home/ExistingNotesandClauses",
                data: JSON.stringify(BussData),
            }).then(function (result) {

                $timeout(function () {

                    console.log(result.data);

                    if (result.data.length > 0) {
                        if (result.data[0].DocID == "277")
                        {
                            $scope.DropdownshowHid = true;
                        }
                        else {
                            $scope.DropdownshowHid = false;
                        }
                       
                        if (result.data[0].Notes != "")
                        {
                            $scope.DynamicGrid.splice(0, 1);
                        }

                        angular.forEach(result.data, function (value, key) {

                            $scope.DynamicGrid.push({
                                'NID': result.data[key].ID,
                                'Notes': result.data[key].Notes,
                                'PortID': { ID: result.data[key].PortID}
                            });

                        });
                    }
                });
            }, function (result) {

                if (result.status > 0) {
                    var errorMsg = result.status + ': ' + result.data;
                    ShowPopup("Sorry no internet connectivity detected.Please reconnect and try  again.");
                }
            });

        }

        $scope.BindDocType = function (NotesID) {

            var Datavalue = {}
            Datavalue.ID = NotesID;

            $http({
                method: 'POST',
                url: '/api/Home/ExistingDocType/',
                data: JSON.stringify(Datavalue),
            }).then(function (result) {
                $timeout(function () {
                    if (result.data[0].ID > 0) {
                        $scope.lblDocType = result.data[0].GeneralName;
                    }
                
                });
            });

        }

        $scope.Remove = function (DynamicGrid, index, NID, gRow) {
            var BussData = {}
            BussData.ID = NID;
            BussData.DocID = $scope.HDRegId;
            
            $http({
                method: 'POST',
                url: '/api/Home/NotesandClausesDelete/',
                data: JSON.stringify(BussData),
            }).then(function (result) {
                $timeout(function () {
                   /* alert(result.data.length);*/
                    if (result.data.length > 0) {
                        $scope.DynamicGrid.splice(index, NID);
                        $scope.BindNotesandClauses($scope.HDRegId);
                    }
                    else {
                        $scope.DynamicGrid.splice(index, 1);
                    }
                });
            });
        }

    });

    function ShowPopup(message) {
        swal(message);
    };

</script>

<div ng-app="MyApp" ng-controller="MyController">
    <div id="overlay" style="display:none;">
        <div class="loadcontainer">
            <div class="spinner"></div>
            <p>Loading Please Wait</p>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 backbtn" style="text-align:right;">
                <a href="/Home/NotesandClausesView" class="btn btn-fill btn-success btnback btn-round btntop">
                    <i class="material-icons">reply</i> Back

                </a>

            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card ">
                    <div class="card-header card-header-primary card-header-text">
                        <div class="card-text">
                            <h4 class="card-title">Notification & BL Clauses</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row" style="border:1px solid #ccc;">
                            <div class="col-md-4" style="text-align:center; border-right:1px solid #ccc;">
                                <label id="lblDocType" ng-bind="lblDocType" style="font-size:20px!important;margin-top:50px;"></label>
                            </div>
                            <div class="col-md-8">
                                <div class="material-datatables" style="padding-top:18px;">
                                    <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                                        <thead>
                                            <tr>
                                                <th>S.No</th>
                                                <th>Port Name </th>
                                                <th>Notes</th>
                                                <th class="disabled-sorting text-right actwid">Actions</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            <tr ng-repeat="gRow in DynamicGrid">
                                                <td>{{$index+1}}</td>
                                                <td>
                                                    <select id="ddlPOL" ng-show="DropdownshowHid" class="form-control" ng-model="gRow.PortID" options="{ allowClear: true }" ng-options="item.PortName for item in PortAllvalues track by item.ID"></select>
                                                </td>
                                                <td>
                                                    <textarea type="text" id="txtNotes" class="form-control" ng-model="gRow.Notes" rows="5"></textarea>
                                                </td>

                                                <td style="display:none;"><input type="hidden" id="HDID" class="form-control" ng-model="gRow.NID" /></td>

                                                <td class="td-actions text-right actwid">
                                                    <button type="button" rel="tooltip" ng-if="$last" ng-click="Add(gRow,$index)" class="btn btn-primary btn-round" data-original-title="" title="">
                                                        <i class="material-icons">add</i>
                                                    </button>
                                                    <button type="button" rel="tooltip" ng-if="!$last" ng-click="Remove(DynamicGrid,$index,gRow.NID,gRow)" class="btn btn-danger btn-round" data-original-title="" title="">
                                                        <i class="material-icons">delete</i>
                                                    </button>
                                                    <input type="hidden" ng-model="HdNID" id="HdNID" />
                                                </td>
                                            </tr>

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="card-footer ">
                        <div class="col-md-12" style="text-align:right;">
                            <button type="submit" ng-click="RecordSave(DynamicGrid);" class="btn btn-fill btn-success">Submit</button>
                        </div>
                        <input type="hidden" id="HDRegId" ng-model="HDRegId" />
                        <label id="NotesDiv" ng-model="NotesDiv"></label>
                    </div>
                </div>
              
            </div>
        </div>

    </div>
</div>




